
kalorie.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000011c0  00001254  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000042a  00800062  00800062  00001256  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001258  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000120  00000000  00000000  000019b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001943  00000000  00000000  00001ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000977  00000000  00000000  00003413  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009a4  00000000  00000000  00003d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003fc  00000000  00000000  00004730  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000849  00000000  00000000  00004b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c5a  00000000  00000000  00005375  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00005fcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
       4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      34:	0c 94 e5 07 	jmp	0xfca	; 0xfca <__vector_13>
      38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_start>:
      54:	56 03       	mulsu	r21, r22

00000056 <__ctors_end>:
      56:	11 24       	eor	r1, r1
      58:	1f be       	out	0x3f, r1	; 63
      5a:	cf e5       	ldi	r28, 0x5F	; 95
      5c:	d8 e0       	ldi	r29, 0x08	; 8
      5e:	de bf       	out	0x3e, r29	; 62
      60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_copy_data>:
      62:	10 e0       	ldi	r17, 0x00	; 0
      64:	a0 e6       	ldi	r26, 0x60	; 96
      66:	b0 e0       	ldi	r27, 0x00	; 0
      68:	e0 ec       	ldi	r30, 0xC0	; 192
      6a:	f1 e1       	ldi	r31, 0x11	; 17
      6c:	02 c0       	rjmp	.+4      	; 0x72 <__do_copy_data+0x10>
      6e:	05 90       	lpm	r0, Z+
      70:	0d 92       	st	X+, r0
      72:	a2 36       	cpi	r26, 0x62	; 98
      74:	b1 07       	cpc	r27, r17
      76:	d9 f7       	brne	.-10     	; 0x6e <__do_copy_data+0xc>

00000078 <__do_clear_bss>:
      78:	14 e0       	ldi	r17, 0x04	; 4
      7a:	a2 e6       	ldi	r26, 0x62	; 98
      7c:	b0 e0       	ldi	r27, 0x00	; 0
      7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
      80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
      82:	ac 38       	cpi	r26, 0x8C	; 140
      84:	b1 07       	cpc	r27, r17
      86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
      88:	10 e0       	ldi	r17, 0x00	; 0
      8a:	c6 e5       	ldi	r28, 0x56	; 86
      8c:	d0 e0       	ldi	r29, 0x00	; 0
      8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
      90:	22 97       	sbiw	r28, 0x02	; 2
      92:	fe 01       	movw	r30, r28
      94:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__tablejump__>
      98:	c4 35       	cpi	r28, 0x54	; 84
      9a:	d1 07       	cpc	r29, r17
      9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
      9e:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
      a2:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <_exit>

000000a6 <__bad_interrupt>:
      a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_Z11temperaturev>:
   -3: id_pin 0-7
   zawsze V_ref=2.56V 
************************************************************************/ 

void temperature()
{
      aa:	1f 93       	push	r17
      ac:	cf 93       	push	r28
      ae:	df 93       	push	r29
      b0:	00 d0       	rcall	.+0      	; 0xb2 <_Z11temperaturev+0x8>
      b2:	00 d0       	rcall	.+0      	; 0xb4 <_Z11temperaturev+0xa>
      b4:	0f 92       	push	r0
      b6:	cd b7       	in	r28, 0x3d	; 61
      b8:	de b7       	in	r29, 0x3e	; 62
	uint8_t adcPinNr = Usart::getBits(0,3);
      ba:	1c 82       	std	Y+4, r1	; 0x04
      bc:	83 e0       	ldi	r24, 0x03	; 3
      be:	8b 83       	std	Y+3, r24	; 0x03
      c0:	ce 01       	movw	r24, r28
      c2:	04 96       	adiw	r24, 0x04	; 4
      c4:	be 01       	movw	r22, r28
      c6:	6d 5f       	subi	r22, 0xFD	; 253
      c8:	7f 4f       	sbci	r23, 0xFF	; 255
      ca:	0e 94 8f 08 	call	0x111e	; 0x111e <_ZN5Usart7getBitsERKhS1_>
      ce:	6d 83       	std	Y+5, r22	; 0x05
	Adc::configureSingle(adcPinNr, Adc::V2_56);
      d0:	80 ec       	ldi	r24, 0xC0	; 192
      d2:	8a 83       	std	Y+2, r24	; 0x02
      d4:	86 e0       	ldi	r24, 0x06	; 6
      d6:	89 83       	std	Y+1, r24	; 0x01
      d8:	ce 01       	movw	r24, r28
      da:	05 96       	adiw	r24, 0x05	; 5
      dc:	be 01       	movw	r22, r28
      de:	6e 5f       	subi	r22, 0xFE	; 254
      e0:	7f 4f       	sbci	r23, 0xFF	; 255
      e2:	ae 01       	movw	r20, r28
      e4:	4f 5f       	subi	r20, 0xFF	; 255
      e6:	5f 4f       	sbci	r21, 0xFF	; 255
      e8:	0e 94 44 01 	call	0x288	; 0x288 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE>

	Adc::Measurement measurement = Adc::measure();
      ec:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_ZN3Adc7measureEv>
      f0:	18 2f       	mov	r17, r24
	Usart::send(measurement.high);
      f2:	89 2f       	mov	r24, r25
      f4:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(measurement.low);
      f8:	81 2f       	mov	r24, r17
      fa:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
}
      fe:	0f 90       	pop	r0
     100:	0f 90       	pop	r0
     102:	0f 90       	pop	r0
     104:	0f 90       	pop	r0
     106:	0f 90       	pop	r0
     108:	df 91       	pop	r29
     10a:	cf 91       	pop	r28
     10c:	1f 91       	pop	r17
     10e:	08 95       	ret

00000110 <_Z5statev>:
#include <avr/io.h>
#include "../modules/Usart.h"

void state()
{
	Usart::send(DDRA);
     110:	8a b3       	in	r24, 0x1a	; 26
     112:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(DDRB);
     116:	87 b3       	in	r24, 0x17	; 23
     118:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(DDRC);
     11c:	84 b3       	in	r24, 0x14	; 20
     11e:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(DDRD);
     122:	81 b3       	in	r24, 0x11	; 17
     124:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(PORTA);
     128:	8b b3       	in	r24, 0x1b	; 27
     12a:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(PORTB);
     12e:	88 b3       	in	r24, 0x18	; 24
     130:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(PORTC);
     134:	85 b3       	in	r24, 0x15	; 21
     136:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(PORTD);
     13a:	82 b3       	in	r24, 0x12	; 18
     13c:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	//Usart::send(PINA);
	//Usart::send(PINB);
	//Usart::send(PINC);
	//Usart::send(PIND);
}
     140:	08 95       	ret

00000142 <_Z10voltometerv>:
   -3: id_pin 0-7
   -1: voltage_references 0-1[enum: 2,56;Vcc]
************************************************************************/ 

void voltometer()
{
     142:	1f 93       	push	r17
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
     14c:	28 97       	sbiw	r28, 0x08	; 8
     14e:	0f b6       	in	r0, 0x3f	; 63
     150:	f8 94       	cli
     152:	de bf       	out	0x3e, r29	; 62
     154:	0f be       	out	0x3f, r0	; 63
     156:	cd bf       	out	0x3d, r28	; 61
	uint8_t adcPinNr = Usart::getBits(0,3);
     158:	1f 82       	std	Y+7, r1	; 0x07
     15a:	13 e0       	ldi	r17, 0x03	; 3
     15c:	1e 83       	std	Y+6, r17	; 0x06
     15e:	ce 01       	movw	r24, r28
     160:	07 96       	adiw	r24, 0x07	; 7
     162:	be 01       	movw	r22, r28
     164:	6a 5f       	subi	r22, 0xFA	; 250
     166:	7f 4f       	sbci	r23, 0xFF	; 255
     168:	0e 94 8f 08 	call	0x111e	; 0x111e <_ZN5Usart7getBitsERKhS1_>
     16c:	68 87       	std	Y+8, r22	; 0x08
	if( Usart::getBit(3) )	Adc::configureSingle(adcPinNr, Adc::VCC);
     16e:	1d 83       	std	Y+5, r17	; 0x05
     170:	ce 01       	movw	r24, r28
     172:	05 96       	adiw	r24, 0x05	; 5
     174:	0e 94 78 08 	call	0x10f0	; 0x10f0 <_ZN5Usart6getBitERKh>
     178:	88 23       	and	r24, r24
     17a:	79 f0       	breq	.+30     	; 0x19a <_Z10voltometerv+0x58>
     17c:	80 e4       	ldi	r24, 0x40	; 64
     17e:	8c 83       	std	Y+4, r24	; 0x04
     180:	86 e0       	ldi	r24, 0x06	; 6
     182:	8b 83       	std	Y+3, r24	; 0x03
     184:	ce 01       	movw	r24, r28
     186:	08 96       	adiw	r24, 0x08	; 8
     188:	be 01       	movw	r22, r28
     18a:	6c 5f       	subi	r22, 0xFC	; 252
     18c:	7f 4f       	sbci	r23, 0xFF	; 255
     18e:	ae 01       	movw	r20, r28
     190:	4d 5f       	subi	r20, 0xFD	; 253
     192:	5f 4f       	sbci	r21, 0xFF	; 255
     194:	0e 94 44 01 	call	0x288	; 0x288 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE>
     198:	0e c0       	rjmp	.+28     	; 0x1b6 <_Z10voltometerv+0x74>
	else Adc::configureSingle(adcPinNr, Adc::V2_56);
     19a:	80 ec       	ldi	r24, 0xC0	; 192
     19c:	8a 83       	std	Y+2, r24	; 0x02
     19e:	86 e0       	ldi	r24, 0x06	; 6
     1a0:	89 83       	std	Y+1, r24	; 0x01
     1a2:	ce 01       	movw	r24, r28
     1a4:	08 96       	adiw	r24, 0x08	; 8
     1a6:	be 01       	movw	r22, r28
     1a8:	6e 5f       	subi	r22, 0xFE	; 254
     1aa:	7f 4f       	sbci	r23, 0xFF	; 255
     1ac:	ae 01       	movw	r20, r28
     1ae:	4f 5f       	subi	r20, 0xFF	; 255
     1b0:	5f 4f       	sbci	r21, 0xFF	; 255
     1b2:	0e 94 44 01 	call	0x288	; 0x288 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE>
	
	Adc::Measurement measurement = Adc::measure();
     1b6:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_ZN3Adc7measureEv>
     1ba:	18 2f       	mov	r17, r24
	Usart::send(measurement.high);
     1bc:	89 2f       	mov	r24, r25
     1be:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	Usart::send(measurement.low);
     1c2:	81 2f       	mov	r24, r17
     1c4:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
}
     1c8:	28 96       	adiw	r28, 0x08	; 8
     1ca:	0f b6       	in	r0, 0x3f	; 63
     1cc:	f8 94       	cli
     1ce:	de bf       	out	0x3e, r29	; 62
     1d0:	0f be       	out	0x3f, r0	; 63
     1d2:	cd bf       	out	0x3d, r28	; 61
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	08 95       	ret

000001dc <main>:
#include "config/scenario_glue.h"
#include "modules/Usart.h"
#include "modules/Adc.h"

int main(void)
{
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	cd b7       	in	r28, 0x3d	; 61
     1e4:	de b7       	in	r29, 0x3e	; 62
     1e6:	2c 97       	sbiw	r28, 0x0c	; 12
     1e8:	0f b6       	in	r0, 0x3f	; 63
     1ea:	f8 94       	cli
     1ec:	de bf       	out	0x3e, r29	; 62
     1ee:	0f be       	out	0x3f, r0	; 63
     1f0:	cd bf       	out	0x3d, r28	; 61
	Usart::init();
     1f2:	0e 94 ff 07 	call	0xffe	; 0xffe <_ZN5Usart4initEv>
/* scenariusz programu - przykladowy kod
	Usart::pushFunction(Usart::Scenario(nazwa_funcji, ilosc_charow_do_odebrania), nr_komendy);
*/
/************************************************************************/

Usart::pushFunction(Usart::Scenario(state, 0), 0);
     1f6:	19 86       	std	Y+9, r1	; 0x09
     1f8:	ce 01       	movw	r24, r28
     1fa:	0a 96       	adiw	r24, 0x0a	; 10
     1fc:	68 e8       	ldi	r22, 0x88	; 136
     1fe:	70 e0       	ldi	r23, 0x00	; 0
     200:	ae 01       	movw	r20, r28
     202:	47 5f       	subi	r20, 0xF7	; 247
     204:	5f 4f       	sbci	r21, 0xFF	; 255
     206:	0e 94 f8 07 	call	0xff0	; 0xff0 <_ZN5Usart8ScenarioC1EPFvvERKh>
     20a:	ce 01       	movw	r24, r28
     20c:	0a 96       	adiw	r24, 0x0a	; 10
     20e:	60 e0       	ldi	r22, 0x00	; 0
     210:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZN5Usart12pushFunctionERKNS_8ScenarioEh>
Usart::pushFunction(Usart::Scenario(voltometer, 1), 1);
     214:	11 e0       	ldi	r17, 0x01	; 1
     216:	1d 83       	std	Y+5, r17	; 0x05
     218:	ce 01       	movw	r24, r28
     21a:	06 96       	adiw	r24, 0x06	; 6
     21c:	61 ea       	ldi	r22, 0xA1	; 161
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	ae 01       	movw	r20, r28
     222:	4b 5f       	subi	r20, 0xFB	; 251
     224:	5f 4f       	sbci	r21, 0xFF	; 255
     226:	0e 94 f8 07 	call	0xff0	; 0xff0 <_ZN5Usart8ScenarioC1EPFvvERKh>
     22a:	ce 01       	movw	r24, r28
     22c:	06 96       	adiw	r24, 0x06	; 6
     22e:	61 e0       	ldi	r22, 0x01	; 1
     230:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZN5Usart12pushFunctionERKNS_8ScenarioEh>
Usart::pushFunction(Usart::Scenario(temperature, 1), 2);
     234:	19 83       	std	Y+1, r17	; 0x01
     236:	ce 01       	movw	r24, r28
     238:	02 96       	adiw	r24, 0x02	; 2
     23a:	65 e5       	ldi	r22, 0x55	; 85
     23c:	70 e0       	ldi	r23, 0x00	; 0
     23e:	ae 01       	movw	r20, r28
     240:	4f 5f       	subi	r20, 0xFF	; 255
     242:	5f 4f       	sbci	r21, 0xFF	; 255
     244:	0e 94 f8 07 	call	0xff0	; 0xff0 <_ZN5Usart8ScenarioC1EPFvvERKh>
     248:	ce 01       	movw	r24, r28
     24a:	02 96       	adiw	r24, 0x02	; 2
     24c:	62 e0       	ldi	r22, 0x02	; 2
     24e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZN5Usart12pushFunctionERKNS_8ScenarioEh>
	#include "config/scenario_register.h"
	Usart::run();
     252:	0e 94 1d 08 	call	0x103a	; 0x103a <_ZN5Usart3runEv>
	return 0;
     256:	80 e0       	ldi	r24, 0x00	; 0
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	2c 96       	adiw	r28, 0x0c	; 12
     25c:	0f b6       	in	r0, 0x3f	; 63
     25e:	f8 94       	cli
     260:	de bf       	out	0x3e, r29	; 62
     262:	0f be       	out	0x3f, r0	; 63
     264:	cd bf       	out	0x3d, r28	; 61
     266:	df 91       	pop	r29
     268:	cf 91       	pop	r28
     26a:	1f 91       	pop	r17
     26c:	08 95       	ret

0000026e <_ZN3Adc11MeasurementC1ERVKhS2_>:

bool Adc::isConfigured = false;
uint8_t Adc::mux;
Adc::PRESCALER Adc::prescaler = Adc::_64;

Adc::Measurement::Measurement(const Register::ADDR &low, const Register::ADDR &high)
     26e:	fc 01       	movw	r30, r24
: low(low), high(high)
     270:	db 01       	movw	r26, r22
     272:	8c 91       	ld	r24, X
     274:	80 83       	st	Z, r24
     276:	da 01       	movw	r26, r20
     278:	8c 91       	ld	r24, X
     27a:	81 83       	std	Z+1, r24	; 0x01
{
}
     27c:	08 95       	ret

0000027e <_ZN3Adc11MeasurementC1Ev>:

Adc::Measurement::Measurement()
     27e:	fc 01       	movw	r30, r24
: low(0xff), high(0xff)
     280:	8f ef       	ldi	r24, 0xFF	; 255
     282:	80 83       	st	Z, r24
     284:	81 83       	std	Z+1, r24	; 0x01
{
}
     286:	08 95       	ret

00000288 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE>:

void Adc::configureSingle(const uint8_t &pin, const Adc::VREF &vref, const Adc::PRESCALER &prescaler)
{
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	1f 93       	push	r17
     28e:	cf 93       	push	r28
     290:	df 93       	push	r29
     292:	00 d0       	rcall	.+0      	; 0x294 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE+0xc>
     294:	cd b7       	in	r28, 0x3d	; 61
     296:	de b7       	in	r29, 0x3e	; 62
     298:	7c 01       	movw	r14, r24
	if (pin > 0x07)
     29a:	fc 01       	movw	r30, r24
     29c:	80 81       	ld	r24, Z
     29e:	88 30       	cpi	r24, 0x08	; 8
     2a0:	18 f5       	brcc	.+70     	; 0x2e8 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE+0x60>
		return;
	mux = vref | (pin & 0x07);
     2a2:	87 70       	andi	r24, 0x07	; 7
     2a4:	fb 01       	movw	r30, r22
     2a6:	90 81       	ld	r25, Z
     2a8:	89 2b       	or	r24, r25
     2aa:	80 93 62 00 	sts	0x0062, r24
	Adc::prescaler = prescaler;
     2ae:	fa 01       	movw	r30, r20
     2b0:	80 81       	ld	r24, Z
     2b2:	80 93 60 00 	sts	0x0060, r24
     2b6:	18 e2       	ldi	r17, 0x28	; 40
	for (uint8_t i = 0; i <= 0x07; ++i)
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
     2b8:	1a 83       	std	Y+2, r17	; 0x02
     2ba:	ce 01       	movw	r24, r28
     2bc:	02 96       	adiw	r24, 0x02	; 2
     2be:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     2c2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN3Pin6pullUpEv>
     2c6:	11 50       	subi	r17, 0x01	; 1
{
	if (pin > 0x07)
		return;
	mux = vref | (pin & 0x07);
	Adc::prescaler = prescaler;
	for (uint8_t i = 0; i <= 0x07; ++i)
     2c8:	10 32       	cpi	r17, 0x20	; 32
     2ca:	b1 f7       	brne	.-20     	; 0x2b8 <_ZN3Adc15configureSingleERKhRKNS_4VREFERKNS_9PRESCALERE+0x30>
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
	Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * pin).read();
     2cc:	f7 01       	movw	r30, r14
     2ce:	90 81       	ld	r25, Z
     2d0:	88 e2       	ldi	r24, 0x28	; 40
     2d2:	89 1b       	sub	r24, r25
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	ce 01       	movw	r24, r28
     2d8:	01 96       	adiw	r24, 0x01	; 1
     2da:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     2de:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
	isConfigured = true;
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	80 93 63 00 	sts	0x0063, r24
}
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	08 95       	ret

000002f8 <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE>:

void Adc::configureGained(const Adc::PIN_PAIR &pinPair, const bool &isCallibration, const Adc::GAIN &gain, const Adc::VREF &vref, const Adc::PRESCALER &prescaler)
{
     2f8:	cf 92       	push	r12
     2fa:	df 92       	push	r13
     2fc:	ef 92       	push	r14
     2fe:	ff 92       	push	r15
     300:	0f 93       	push	r16
     302:	1f 93       	push	r17
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	00 d0       	rcall	.+0      	; 0x30a <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0x12>
     30a:	00 d0       	rcall	.+0      	; 0x30c <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0x14>
     30c:	0f 92       	push	r0
     30e:	cd b7       	in	r28, 0x3d	; 61
     310:	de b7       	in	r29, 0x3e	; 62
     312:	6c 01       	movw	r12, r24
     314:	7b 01       	movw	r14, r22
     316:	f8 01       	movw	r30, r16
	mux = pinPair | gain | (!isCallibration) | vref;
     318:	da 01       	movw	r26, r20
     31a:	9c 91       	ld	r25, X
     31c:	d6 01       	movw	r26, r12
     31e:	8c 91       	ld	r24, X
     320:	98 2b       	or	r25, r24
     322:	db 01       	movw	r26, r22
     324:	4c 91       	ld	r20, X
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	84 27       	eor	r24, r20
     32a:	89 2b       	or	r24, r25
     32c:	d9 01       	movw	r26, r18
     32e:	9c 91       	ld	r25, X
     330:	89 2b       	or	r24, r25
     332:	80 93 62 00 	sts	0x0062, r24
	Adc::prescaler = prescaler;
     336:	80 81       	ld	r24, Z
     338:	80 93 60 00 	sts	0x0060, r24
     33c:	18 e2       	ldi	r17, 0x28	; 40
	for (uint8_t i = 0; i <= 0x07; ++i)
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
     33e:	1d 83       	std	Y+5, r17	; 0x05
     340:	ce 01       	movw	r24, r28
     342:	05 96       	adiw	r24, 0x05	; 5
     344:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     348:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN3Pin6pullUpEv>
     34c:	11 50       	subi	r17, 0x01	; 1

void Adc::configureGained(const Adc::PIN_PAIR &pinPair, const bool &isCallibration, const Adc::GAIN &gain, const Adc::VREF &vref, const Adc::PRESCALER &prescaler)
{
	mux = pinPair | gain | (!isCallibration) | vref;
	Adc::prescaler = prescaler;
	for (uint8_t i = 0; i <= 0x07; ++i)
     34e:	10 32       	cpi	r17, 0x20	; 32
     350:	b1 f7       	brne	.-20     	; 0x33e <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0x46>
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
	if (!isCallibration)
     352:	f7 01       	movw	r30, r14
     354:	80 81       	ld	r24, Z
     356:	88 23       	and	r24, r24
     358:	41 f5       	brne	.+80     	; 0x3aa <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0xb2>
	{
		switch (pinPair)
     35a:	d6 01       	movw	r26, r12
     35c:	8c 91       	ld	r24, X
     35e:	88 23       	and	r24, r24
     360:	19 f0       	breq	.+6      	; 0x368 <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0x70>
     362:	84 30       	cpi	r24, 0x04	; 4
     364:	11 f5       	brne	.+68     	; 0x3aa <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0xb2>
     366:	11 c0       	rjmp	.+34     	; 0x38a <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0x92>
		{
			case _0_1:
				Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * 0).read();
     368:	88 e2       	ldi	r24, 0x28	; 40
     36a:	8c 83       	std	Y+4, r24	; 0x04
     36c:	ce 01       	movw	r24, r28
     36e:	04 96       	adiw	r24, 0x04	; 4
     370:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     374:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
				Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * 1).read();
     378:	87 e2       	ldi	r24, 0x27	; 39
     37a:	8b 83       	std	Y+3, r24	; 0x03
     37c:	ce 01       	movw	r24, r28
     37e:	03 96       	adiw	r24, 0x03	; 3
     380:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     384:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
				break;
     388:	10 c0       	rjmp	.+32     	; 0x3aa <_ZN3Adc15configureGainedERKNS_8PIN_PAIRERKbRKNS_4GAINERKNS_4VREFERKNS_9PRESCALERE+0xb2>
			case _3_2:
				Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * 2).read();
     38a:	86 e2       	ldi	r24, 0x26	; 38
     38c:	8a 83       	std	Y+2, r24	; 0x02
     38e:	ce 01       	movw	r24, r28
     390:	02 96       	adiw	r24, 0x02	; 2
     392:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     396:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
				Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * 3).read();
     39a:	85 e2       	ldi	r24, 0x25	; 37
     39c:	89 83       	std	Y+1, r24	; 0x01
     39e:	ce 01       	movw	r24, r28
     3a0:	01 96       	adiw	r24, 0x01	; 1
     3a2:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     3a6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
				break;
		}			
	}
	isConfigured = true;
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	80 93 63 00 	sts	0x0063, r24
}
     3b0:	0f 90       	pop	r0
     3b2:	0f 90       	pop	r0
     3b4:	0f 90       	pop	r0
     3b6:	0f 90       	pop	r0
     3b8:	0f 90       	pop	r0
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	1f 91       	pop	r17
     3c0:	0f 91       	pop	r16
     3c2:	ff 90       	pop	r15
     3c4:	ef 90       	pop	r14
     3c6:	df 90       	pop	r13
     3c8:	cf 90       	pop	r12
     3ca:	08 95       	ret

000003cc <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE>:

void Adc::configureDifferential(const uint8_t &pinPlus, const uint8_t &pinMinus, const Adc::VREF &vref, const Adc::PRESCALER &prescaler)
{
     3cc:	cf 92       	push	r12
     3ce:	df 92       	push	r13
     3d0:	ef 92       	push	r14
     3d2:	ff 92       	push	r15
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	00 d0       	rcall	.+0      	; 0x3dc <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0x10>
     3dc:	0f 92       	push	r0
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	6c 01       	movw	r12, r24
     3e4:	7b 01       	movw	r14, r22
	if (pinMinus == 1)
     3e6:	fb 01       	movw	r30, r22
     3e8:	80 81       	ld	r24, Z
     3ea:	81 30       	cpi	r24, 0x01	; 1
     3ec:	41 f4       	brne	.+16     	; 0x3fe <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0x32>
	{
		if (pinPlus > 0x07)
     3ee:	f6 01       	movw	r30, r12
     3f0:	80 81       	ld	r24, Z
     3f2:	88 30       	cpi	r24, 0x08	; 8
     3f4:	08 f0       	brcs	.+2      	; 0x3f8 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0x2c>
     3f6:	3f c0       	rjmp	.+126    	; 0x476 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0xaa>
			return;
		mux = 0x00;
     3f8:	10 92 62 00 	sts	0x0062, r1
     3fc:	09 c0       	rjmp	.+18     	; 0x410 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0x44>
	}
	else if (pinMinus == 2)
     3fe:	82 30       	cpi	r24, 0x02	; 2
     400:	d1 f5       	brne	.+116    	; 0x476 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0xaa>
	{
		if (pinPlus > 0x05)
     402:	f6 01       	movw	r30, r12
     404:	80 81       	ld	r24, Z
     406:	86 30       	cpi	r24, 0x06	; 6
     408:	b0 f5       	brcc	.+108    	; 0x476 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0xaa>
			return;
		mux = 0x08;
     40a:	88 e0       	ldi	r24, 0x08	; 8
     40c:	80 93 62 00 	sts	0x0062, r24
	}
	else
		return;
	mux |= (0x10 | pinMinus | vref);
     410:	80 91 62 00 	lds	r24, 0x0062
     414:	80 61       	ori	r24, 0x10	; 16
     416:	f7 01       	movw	r30, r14
     418:	90 81       	ld	r25, Z
     41a:	89 2b       	or	r24, r25
     41c:	fa 01       	movw	r30, r20
     41e:	90 81       	ld	r25, Z
     420:	89 2b       	or	r24, r25
     422:	80 93 62 00 	sts	0x0062, r24
	Adc::prescaler = prescaler;
     426:	f9 01       	movw	r30, r18
     428:	80 81       	ld	r24, Z
     42a:	80 93 60 00 	sts	0x0060, r24
     42e:	18 e2       	ldi	r17, 0x28	; 40
	for (uint8_t i = 0; i <= 0x07; ++i)
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
     430:	1b 83       	std	Y+3, r17	; 0x03
     432:	ce 01       	movw	r24, r28
     434:	03 96       	adiw	r24, 0x03	; 3
     436:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     43a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN3Pin6pullUpEv>
     43e:	11 50       	subi	r17, 0x01	; 1
	}
	else
		return;
	mux |= (0x10 | pinMinus | vref);
	Adc::prescaler = prescaler;
	for (uint8_t i = 0; i <= 0x07; ++i)
     440:	10 32       	cpi	r17, 0x20	; 32
     442:	b1 f7       	brne	.-20     	; 0x430 <_ZN3Adc21configureDifferentialERKhS1_RKNS_4VREFERKNS_9PRESCALERE+0x64>
		Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * i).pullUp();
	Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * pinPlus).read();
     444:	18 e2       	ldi	r17, 0x28	; 40
     446:	f6 01       	movw	r30, r12
     448:	80 81       	ld	r24, Z
     44a:	f1 2f       	mov	r31, r17
     44c:	f8 1b       	sub	r31, r24
     44e:	fa 83       	std	Y+2, r31	; 0x02
     450:	ce 01       	movw	r24, r28
     452:	02 96       	adiw	r24, 0x02	; 2
     454:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     458:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
	Pin::get(ADC_PIN_OFFSET + (ADC_IS_PIN_REVERSED ? -1 : 1) * pinMinus).read();
     45c:	f7 01       	movw	r30, r14
     45e:	80 81       	ld	r24, Z
     460:	18 1b       	sub	r17, r24
     462:	19 83       	std	Y+1, r17	; 0x01
     464:	ce 01       	movw	r24, r28
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZN3Pin3getERKh>
     46c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN3Pin4readEv>
	isConfigured = true;
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	80 93 63 00 	sts	0x0063, r24
}
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	df 91       	pop	r29
     47e:	cf 91       	pop	r28
     480:	1f 91       	pop	r17
     482:	ff 90       	pop	r15
     484:	ef 90       	pop	r14
     486:	df 90       	pop	r13
     488:	cf 90       	pop	r12
     48a:	08 95       	ret

0000048c <_ZN3Adc16configureSpecialERKNS_12SPECIAL_VREFERKNS_9PRESCALERE>:

void Adc::configureSpecial(const Adc::SPECIAL_VREF &specialVref, const Adc::PRESCALER &prescaler)
{
	mux = specialVref;
     48c:	fc 01       	movw	r30, r24
     48e:	80 81       	ld	r24, Z
     490:	80 93 62 00 	sts	0x0062, r24
	Adc::prescaler = prescaler;
     494:	fb 01       	movw	r30, r22
     496:	80 81       	ld	r24, Z
     498:	80 93 60 00 	sts	0x0060, r24
	isConfigured = true;
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	80 93 63 00 	sts	0x0063, r24
}
     4a2:	08 95       	ret

000004a4 <_ZN3Adc12setRegistersEv>:

void Adc::setRegisters()
{
	while (ADCSRA & (1<<ADSC));
     4a4:	36 99       	sbic	0x06, 6	; 6
     4a6:	fe cf       	rjmp	.-4      	; 0x4a4 <_ZN3Adc12setRegistersEv>
	ADCSRA &= ~(1<<ADEN);
     4a8:	37 98       	cbi	0x06, 7	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4aa:	8f ef       	ldi	r24, 0xFF	; 255
     4ac:	9f ef       	ldi	r25, 0xFF	; 255
     4ae:	a8 e0       	ldi	r26, 0x08	; 8
     4b0:	81 50       	subi	r24, 0x01	; 1
     4b2:	90 40       	sbci	r25, 0x00	; 0
     4b4:	a0 40       	sbci	r26, 0x00	; 0
     4b6:	e1 f7       	brne	.-8      	; 0x4b0 <_ZN3Adc12setRegistersEv+0xc>
     4b8:	00 c0       	rjmp	.+0      	; 0x4ba <_ZN3Adc12setRegistersEv+0x16>
     4ba:	00 00       	nop
	_delay_ms(ADC_SLEEP_TIME);
	ADCSRA |= (1<<ADEN) | prescaler;
     4bc:	96 b1       	in	r25, 0x06	; 6
     4be:	80 91 60 00 	lds	r24, 0x0060
     4c2:	89 2b       	or	r24, r25
     4c4:	80 68       	ori	r24, 0x80	; 128
     4c6:	86 b9       	out	0x06, r24	; 6
	ADMUX = mux;
     4c8:	80 91 62 00 	lds	r24, 0x0062
     4cc:	87 b9       	out	0x07, r24	; 7
	sei();
     4ce:	78 94       	sei
}
     4d0:	08 95       	ret

000004d2 <_ZN3Adc7measureEv>:

const Adc::Measurement Adc::measure()
{
     4d2:	cf 93       	push	r28
     4d4:	df 93       	push	r29
     4d6:	00 d0       	rcall	.+0      	; 0x4d8 <_ZN3Adc7measureEv+0x6>
     4d8:	00 d0       	rcall	.+0      	; 0x4da <_ZN3Adc7measureEv+0x8>
     4da:	cd b7       	in	r28, 0x3d	; 61
     4dc:	de b7       	in	r29, 0x3e	; 62
	if (!isConfigured)
     4de:	80 91 63 00 	lds	r24, 0x0063
     4e2:	88 23       	and	r24, r24
     4e4:	39 f4       	brne	.+14     	; 0x4f4 <_ZN3Adc7measureEv+0x22>
		return Adc::Measurement();
     4e6:	ce 01       	movw	r24, r28
     4e8:	03 96       	adiw	r24, 0x03	; 3
     4ea:	0e 94 3f 01 	call	0x27e	; 0x27e <_ZN3Adc11MeasurementC1Ev>
     4ee:	8b 81       	ldd	r24, Y+3	; 0x03
     4f0:	9c 81       	ldd	r25, Y+4	; 0x04
     4f2:	0f c0       	rjmp	.+30     	; 0x512 <_ZN3Adc7measureEv+0x40>
	setRegisters();
     4f4:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3Adc12setRegistersEv>
	ADCSRA |= (1<<ADSC);
     4f8:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC));
     4fa:	36 99       	sbic	0x06, 6	; 6
     4fc:	fe cf       	rjmp	.-4      	; 0x4fa <_ZN3Adc7measureEv+0x28>
	return Adc::Measurement(ADCL, ADCH);
     4fe:	ce 01       	movw	r24, r28
     500:	01 96       	adiw	r24, 0x01	; 1
     502:	64 e2       	ldi	r22, 0x24	; 36
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	45 e2       	ldi	r20, 0x25	; 37
     508:	50 e0       	ldi	r21, 0x00	; 0
     50a:	0e 94 37 01 	call	0x26e	; 0x26e <_ZN3Adc11MeasurementC1ERVKhS2_>
     50e:	89 81       	ldd	r24, Y+1	; 0x01
     510:	9a 81       	ldd	r25, Y+2	; 0x02
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	0f 90       	pop	r0
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	08 95       	ret

00000520 <_ZN3Pin6setLowEv>:
     520:	fc 01       	movw	r30, r24
     522:	a1 81       	ldd	r26, Z+1	; 0x01
     524:	b2 81       	ldd	r27, Z+2	; 0x02
     526:	4c 91       	ld	r20, X
     528:	21 e0       	ldi	r18, 0x01	; 1
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	c9 01       	movw	r24, r18
     52e:	07 80       	ldd	r0, Z+7	; 0x07
     530:	02 c0       	rjmp	.+4      	; 0x536 <_ZN3Pin6setLowEv+0x16>
     532:	88 0f       	add	r24, r24
     534:	99 1f       	adc	r25, r25
     536:	0a 94       	dec	r0
     538:	e2 f7       	brpl	.-8      	; 0x532 <_ZN3Pin6setLowEv+0x12>
     53a:	84 2b       	or	r24, r20
     53c:	8c 93       	st	X, r24
     53e:	a5 81       	ldd	r26, Z+5	; 0x05
     540:	b6 81       	ldd	r27, Z+6	; 0x06
     542:	8c 91       	ld	r24, X
     544:	07 80       	ldd	r0, Z+7	; 0x07
     546:	02 c0       	rjmp	.+4      	; 0x54c <_ZN3Pin6setLowEv+0x2c>
     548:	22 0f       	add	r18, r18
     54a:	33 1f       	adc	r19, r19
     54c:	0a 94       	dec	r0
     54e:	e2 f7       	brpl	.-8      	; 0x548 <_ZN3Pin6setLowEv+0x28>
     550:	20 95       	com	r18
     552:	28 23       	and	r18, r24
     554:	2c 93       	st	X, r18
     556:	08 95       	ret

00000558 <_ZN3Pin7setHighEv>:
     558:	fc 01       	movw	r30, r24
     55a:	a1 81       	ldd	r26, Z+1	; 0x01
     55c:	b2 81       	ldd	r27, Z+2	; 0x02
     55e:	4c 91       	ld	r20, X
     560:	21 e0       	ldi	r18, 0x01	; 1
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	c9 01       	movw	r24, r18
     566:	07 80       	ldd	r0, Z+7	; 0x07
     568:	02 c0       	rjmp	.+4      	; 0x56e <_ZN3Pin7setHighEv+0x16>
     56a:	88 0f       	add	r24, r24
     56c:	99 1f       	adc	r25, r25
     56e:	0a 94       	dec	r0
     570:	e2 f7       	brpl	.-8      	; 0x56a <_ZN3Pin7setHighEv+0x12>
     572:	84 2b       	or	r24, r20
     574:	8c 93       	st	X, r24
     576:	a5 81       	ldd	r26, Z+5	; 0x05
     578:	b6 81       	ldd	r27, Z+6	; 0x06
     57a:	8c 91       	ld	r24, X
     57c:	07 80       	ldd	r0, Z+7	; 0x07
     57e:	02 c0       	rjmp	.+4      	; 0x584 <_ZN3Pin7setHighEv+0x2c>
     580:	22 0f       	add	r18, r18
     582:	33 1f       	adc	r19, r19
     584:	0a 94       	dec	r0
     586:	e2 f7       	brpl	.-8      	; 0x580 <_ZN3Pin7setHighEv+0x28>
     588:	28 2b       	or	r18, r24
     58a:	2c 93       	st	X, r18
     58c:	08 95       	ret

0000058e <_ZNK3Pin6isHighEv>:
     58e:	fc 01       	movw	r30, r24
     590:	a5 81       	ldd	r26, Z+5	; 0x05
     592:	b6 81       	ldd	r27, Z+6	; 0x06
     594:	8c 91       	ld	r24, X
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	07 80       	ldd	r0, Z+7	; 0x07
     59a:	02 c0       	rjmp	.+4      	; 0x5a0 <_ZNK3Pin6isHighEv+0x12>
     59c:	95 95       	asr	r25
     59e:	87 95       	ror	r24
     5a0:	0a 94       	dec	r0
     5a2:	e2 f7       	brpl	.-8      	; 0x59c <_ZNK3Pin6isHighEv+0xe>
     5a4:	81 70       	andi	r24, 0x01	; 1
     5a6:	08 95       	ret

000005a8 <_ZN3Pin4readEv>:
     5a8:	fc 01       	movw	r30, r24
     5aa:	a1 81       	ldd	r26, Z+1	; 0x01
     5ac:	b2 81       	ldd	r27, Z+2	; 0x02
     5ae:	4c 91       	ld	r20, X
     5b0:	21 e0       	ldi	r18, 0x01	; 1
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	c9 01       	movw	r24, r18
     5b6:	07 80       	ldd	r0, Z+7	; 0x07
     5b8:	02 c0       	rjmp	.+4      	; 0x5be <_ZN3Pin4readEv+0x16>
     5ba:	88 0f       	add	r24, r24
     5bc:	99 1f       	adc	r25, r25
     5be:	0a 94       	dec	r0
     5c0:	e2 f7       	brpl	.-8      	; 0x5ba <_ZN3Pin4readEv+0x12>
     5c2:	80 95       	com	r24
     5c4:	84 23       	and	r24, r20
     5c6:	8c 93       	st	X, r24
     5c8:	a5 81       	ldd	r26, Z+5	; 0x05
     5ca:	b6 81       	ldd	r27, Z+6	; 0x06
     5cc:	8c 91       	ld	r24, X
     5ce:	07 80       	ldd	r0, Z+7	; 0x07
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <_ZN3Pin4readEv+0x2e>
     5d2:	22 0f       	add	r18, r18
     5d4:	33 1f       	adc	r19, r19
     5d6:	0a 94       	dec	r0
     5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <_ZN3Pin4readEv+0x2a>
     5da:	20 95       	com	r18
     5dc:	28 23       	and	r18, r24
     5de:	2c 93       	st	X, r18
     5e0:	08 95       	ret

000005e2 <_ZN3Pin6pullUpEv>:
     5e2:	fc 01       	movw	r30, r24
     5e4:	a1 81       	ldd	r26, Z+1	; 0x01
     5e6:	b2 81       	ldd	r27, Z+2	; 0x02
     5e8:	4c 91       	ld	r20, X
     5ea:	21 e0       	ldi	r18, 0x01	; 1
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	c9 01       	movw	r24, r18
     5f0:	07 80       	ldd	r0, Z+7	; 0x07
     5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <_ZN3Pin6pullUpEv+0x16>
     5f4:	88 0f       	add	r24, r24
     5f6:	99 1f       	adc	r25, r25
     5f8:	0a 94       	dec	r0
     5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <_ZN3Pin6pullUpEv+0x12>
     5fc:	80 95       	com	r24
     5fe:	84 23       	and	r24, r20
     600:	8c 93       	st	X, r24
     602:	a5 81       	ldd	r26, Z+5	; 0x05
     604:	b6 81       	ldd	r27, Z+6	; 0x06
     606:	8c 91       	ld	r24, X
     608:	07 80       	ldd	r0, Z+7	; 0x07
     60a:	02 c0       	rjmp	.+4      	; 0x610 <_ZN3Pin6pullUpEv+0x2e>
     60c:	22 0f       	add	r18, r18
     60e:	33 1f       	adc	r19, r19
     610:	0a 94       	dec	r0
     612:	e2 f7       	brpl	.-8      	; 0x60c <_ZN3Pin6pullUpEv+0x2a>
     614:	28 2b       	or	r18, r24
     616:	2c 93       	st	X, r18
     618:	08 95       	ret

0000061a <_ZNK3Pin11getAddrMaskEv>:
     61a:	07 96       	adiw	r24, 0x07	; 7
     61c:	08 95       	ret

0000061e <_ZN3Pin3getERKh>:
     61e:	fc 01       	movw	r30, r24
     620:	90 81       	ld	r25, Z
     622:	80 91 64 00 	lds	r24, 0x0064
     626:	98 17       	cp	r25, r24
     628:	49 f0       	breq	.+18     	; 0x63c <_ZN3Pin3getERKh+0x1e>
     62a:	ed e6       	ldi	r30, 0x6D	; 109
     62c:	f0 e0       	ldi	r31, 0x00	; 0
     62e:	21 e0       	ldi	r18, 0x01	; 1
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	a9 01       	movw	r20, r18
     634:	80 81       	ld	r24, Z
     636:	89 17       	cp	r24, r25
     638:	79 f4       	brne	.+30     	; 0x658 <_ZN3Pin3getERKh+0x3a>
     63a:	02 c0       	rjmp	.+4      	; 0x640 <_ZN3Pin3getERKh+0x22>
     63c:	40 e0       	ldi	r20, 0x00	; 0
     63e:	50 e0       	ldi	r21, 0x00	; 0
     640:	ca 01       	movw	r24, r20
     642:	88 0f       	add	r24, r24
     644:	99 1f       	adc	r25, r25
     646:	88 0f       	add	r24, r24
     648:	99 1f       	adc	r25, r25
     64a:	88 0f       	add	r24, r24
     64c:	99 1f       	adc	r25, r25
     64e:	84 0f       	add	r24, r20
     650:	95 1f       	adc	r25, r21
     652:	8c 59       	subi	r24, 0x9C	; 156
     654:	9f 4f       	sbci	r25, 0xFF	; 255
     656:	08 95       	ret
     658:	2f 5f       	subi	r18, 0xFF	; 255
     65a:	3f 4f       	sbci	r19, 0xFF	; 255
     65c:	39 96       	adiw	r30, 0x09	; 9
     65e:	20 32       	cpi	r18, 0x20	; 32
     660:	31 05       	cpc	r19, r1
     662:	39 f7       	brne	.-50     	; 0x632 <_ZN3Pin3getERKh+0x14>
     664:	84 e6       	ldi	r24, 0x64	; 100
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	08 95       	ret

0000066a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>:
     66a:	cf 92       	push	r12
     66c:	df 92       	push	r13
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	0f 93       	push	r16
     674:	1f 93       	push	r17
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	fc 01       	movw	r30, r24
     67c:	e7 01       	movw	r28, r14
     67e:	db 01       	movw	r26, r22
     680:	8c 91       	ld	r24, X
     682:	80 83       	st	Z, r24
     684:	52 83       	std	Z+2, r21	; 0x02
     686:	41 83       	std	Z+1, r20	; 0x01
     688:	34 83       	std	Z+4, r19	; 0x04
     68a:	23 83       	std	Z+3, r18	; 0x03
     68c:	16 83       	std	Z+6, r17	; 0x06
     68e:	05 83       	std	Z+5, r16	; 0x05
     690:	88 81       	ld	r24, Y
     692:	87 83       	std	Z+7, r24	; 0x07
     694:	d6 01       	movw	r26, r12
     696:	8c 91       	ld	r24, X
     698:	80 87       	std	Z+8, r24	; 0x08
     69a:	df 91       	pop	r29
     69c:	cf 91       	pop	r28
     69e:	1f 91       	pop	r17
     6a0:	0f 91       	pop	r16
     6a2:	ff 90       	pop	r15
     6a4:	ef 90       	pop	r14
     6a6:	df 90       	pop	r13
     6a8:	cf 90       	pop	r12
     6aa:	08 95       	ret

000006ac <_GLOBAL__sub_I__ZN3Pin9instancesE>:
     6ac:	2f 92       	push	r2
     6ae:	3f 92       	push	r3
     6b0:	4f 92       	push	r4
     6b2:	5f 92       	push	r5
     6b4:	6f 92       	push	r6
     6b6:	7f 92       	push	r7
     6b8:	8f 92       	push	r8
     6ba:	9f 92       	push	r9
     6bc:	bf 92       	push	r11
     6be:	cf 92       	push	r12
     6c0:	df 92       	push	r13
     6c2:	ef 92       	push	r14
     6c4:	ff 92       	push	r15
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	c0 58       	subi	r28, 0x80	; 128
     6d4:	d0 40       	sbci	r29, 0x00	; 0
     6d6:	0f b6       	in	r0, 0x3f	; 63
     6d8:	f8 94       	cli
     6da:	de bf       	out	0x3e, r29	; 62
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	cd bf       	out	0x3d, r28	; 61
     6e0:	bb 24       	eor	r11, r11
     6e2:	b3 94       	inc	r11
     6e4:	b9 82       	std	Y+1, r11	; 0x01
     6e6:	1b 82       	std	Y+3, r1	; 0x03
     6e8:	1a 82       	std	Y+2, r1	; 0x02
     6ea:	bc 82       	std	Y+4, r11	; 0x04
     6ec:	0f 2e       	mov	r0, r31
     6ee:	f4 e6       	ldi	r31, 0x64	; 100
     6f0:	8f 2e       	mov	r8, r31
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	9f 2e       	mov	r9, r31
     6f6:	f0 2d       	mov	r31, r0
     6f8:	c4 01       	movw	r24, r8
     6fa:	be 01       	movw	r22, r28
     6fc:	6f 5f       	subi	r22, 0xFF	; 255
     6fe:	7f 4f       	sbci	r23, 0xFF	; 255
     700:	47 e3       	ldi	r20, 0x37	; 55
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	26 e3       	ldi	r18, 0x36	; 54
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	08 e3       	ldi	r16, 0x38	; 56
     70a:	10 e0       	ldi	r17, 0x00	; 0
     70c:	ee 24       	eor	r14, r14
     70e:	ff 24       	eor	r15, r15
     710:	68 94       	set
     712:	e1 f8       	bld	r14, 1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	cc 24       	eor	r12, r12
     71a:	dd 24       	eor	r13, r13
     71c:	68 94       	set
     71e:	c2 f8       	bld	r12, 2
     720:	cc 0e       	add	r12, r28
     722:	dd 1e       	adc	r13, r29
     724:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     728:	82 e0       	ldi	r24, 0x02	; 2
     72a:	8d 83       	std	Y+5, r24	; 0x05
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	9f 83       	std	Y+7, r25	; 0x07
     732:	8e 83       	std	Y+6, r24	; 0x06
     734:	b8 86       	std	Y+8, r11	; 0x08
     736:	c4 01       	movw	r24, r8
     738:	09 96       	adiw	r24, 0x09	; 9
     73a:	be 01       	movw	r22, r28
     73c:	6b 5f       	subi	r22, 0xFB	; 251
     73e:	7f 4f       	sbci	r23, 0xFF	; 255
     740:	47 e3       	ldi	r20, 0x37	; 55
     742:	50 e0       	ldi	r21, 0x00	; 0
     744:	26 e3       	ldi	r18, 0x36	; 54
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	0f 2e       	mov	r0, r31
     74a:	f6 e0       	ldi	r31, 0x06	; 6
     74c:	ef 2e       	mov	r14, r31
     74e:	ff 24       	eor	r15, r15
     750:	f0 2d       	mov	r31, r0
     752:	ec 0e       	add	r14, r28
     754:	fd 1e       	adc	r15, r29
     756:	cc 24       	eor	r12, r12
     758:	dd 24       	eor	r13, r13
     75a:	68 94       	set
     75c:	c3 f8       	bld	r12, 3
     75e:	cc 0e       	add	r12, r28
     760:	dd 1e       	adc	r13, r29
     762:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     766:	83 e0       	ldi	r24, 0x03	; 3
     768:	89 87       	std	Y+9, r24	; 0x09
     76a:	82 e0       	ldi	r24, 0x02	; 2
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	9b 87       	std	Y+11, r25	; 0x0b
     770:	8a 87       	std	Y+10, r24	; 0x0a
     772:	bc 86       	std	Y+12, r11	; 0x0c
     774:	c4 01       	movw	r24, r8
     776:	42 96       	adiw	r24, 0x12	; 18
     778:	be 01       	movw	r22, r28
     77a:	67 5f       	subi	r22, 0xF7	; 247
     77c:	7f 4f       	sbci	r23, 0xFF	; 255
     77e:	47 e3       	ldi	r20, 0x37	; 55
     780:	50 e0       	ldi	r21, 0x00	; 0
     782:	26 e3       	ldi	r18, 0x36	; 54
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	0f 2e       	mov	r0, r31
     788:	fa e0       	ldi	r31, 0x0A	; 10
     78a:	ef 2e       	mov	r14, r31
     78c:	ff 24       	eor	r15, r15
     78e:	f0 2d       	mov	r31, r0
     790:	ec 0e       	add	r14, r28
     792:	fd 1e       	adc	r15, r29
     794:	0f 2e       	mov	r0, r31
     796:	fc e0       	ldi	r31, 0x0C	; 12
     798:	cf 2e       	mov	r12, r31
     79a:	dd 24       	eor	r13, r13
     79c:	f0 2d       	mov	r31, r0
     79e:	cc 0e       	add	r12, r28
     7a0:	dd 1e       	adc	r13, r29
     7a2:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     7a6:	84 e0       	ldi	r24, 0x04	; 4
     7a8:	8d 87       	std	Y+13, r24	; 0x0d
     7aa:	83 e0       	ldi	r24, 0x03	; 3
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	9f 87       	std	Y+15, r25	; 0x0f
     7b0:	8e 87       	std	Y+14, r24	; 0x0e
     7b2:	b8 8a       	std	Y+16, r11	; 0x10
     7b4:	c4 01       	movw	r24, r8
     7b6:	4b 96       	adiw	r24, 0x1b	; 27
     7b8:	be 01       	movw	r22, r28
     7ba:	63 5f       	subi	r22, 0xF3	; 243
     7bc:	7f 4f       	sbci	r23, 0xFF	; 255
     7be:	47 e3       	ldi	r20, 0x37	; 55
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	26 e3       	ldi	r18, 0x36	; 54
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	0f 2e       	mov	r0, r31
     7c8:	fe e0       	ldi	r31, 0x0E	; 14
     7ca:	ef 2e       	mov	r14, r31
     7cc:	ff 24       	eor	r15, r15
     7ce:	f0 2d       	mov	r31, r0
     7d0:	ec 0e       	add	r14, r28
     7d2:	fd 1e       	adc	r15, r29
     7d4:	cc 24       	eor	r12, r12
     7d6:	dd 24       	eor	r13, r13
     7d8:	68 94       	set
     7da:	c4 f8       	bld	r12, 4
     7dc:	cc 0e       	add	r12, r28
     7de:	dd 1e       	adc	r13, r29
     7e0:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     7e4:	85 e0       	ldi	r24, 0x05	; 5
     7e6:	89 8b       	std	Y+17, r24	; 0x11
     7e8:	84 e0       	ldi	r24, 0x04	; 4
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	9b 8b       	std	Y+19, r25	; 0x13
     7ee:	8a 8b       	std	Y+18, r24	; 0x12
     7f0:	bc 8a       	std	Y+20, r11	; 0x14
     7f2:	c4 01       	movw	r24, r8
     7f4:	84 96       	adiw	r24, 0x24	; 36
     7f6:	be 01       	movw	r22, r28
     7f8:	6f 5e       	subi	r22, 0xEF	; 239
     7fa:	7f 4f       	sbci	r23, 0xFF	; 255
     7fc:	47 e3       	ldi	r20, 0x37	; 55
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	26 e3       	ldi	r18, 0x36	; 54
     802:	30 e0       	ldi	r19, 0x00	; 0
     804:	0f 2e       	mov	r0, r31
     806:	f2 e1       	ldi	r31, 0x12	; 18
     808:	ef 2e       	mov	r14, r31
     80a:	ff 24       	eor	r15, r15
     80c:	f0 2d       	mov	r31, r0
     80e:	ec 0e       	add	r14, r28
     810:	fd 1e       	adc	r15, r29
     812:	0f 2e       	mov	r0, r31
     814:	f4 e1       	ldi	r31, 0x14	; 20
     816:	cf 2e       	mov	r12, r31
     818:	dd 24       	eor	r13, r13
     81a:	f0 2d       	mov	r31, r0
     81c:	cc 0e       	add	r12, r28
     81e:	dd 1e       	adc	r13, r29
     820:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     824:	86 e0       	ldi	r24, 0x06	; 6
     826:	8d 8b       	std	Y+21, r24	; 0x15
     828:	0f 2e       	mov	r0, r31
     82a:	f5 e0       	ldi	r31, 0x05	; 5
     82c:	2f 2e       	mov	r2, r31
     82e:	33 24       	eor	r3, r3
     830:	f0 2d       	mov	r31, r0
     832:	3f 8a       	std	Y+23, r3	; 0x17
     834:	2e 8a       	std	Y+22, r2	; 0x16
     836:	18 8e       	std	Y+24, r1	; 0x18
     838:	c4 01       	movw	r24, r8
     83a:	8d 96       	adiw	r24, 0x2d	; 45
     83c:	be 01       	movw	r22, r28
     83e:	6b 5e       	subi	r22, 0xEB	; 235
     840:	7f 4f       	sbci	r23, 0xFF	; 255
     842:	47 e3       	ldi	r20, 0x37	; 55
     844:	50 e0       	ldi	r21, 0x00	; 0
     846:	26 e3       	ldi	r18, 0x36	; 54
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	0f 2e       	mov	r0, r31
     84c:	f6 e1       	ldi	r31, 0x16	; 22
     84e:	ef 2e       	mov	r14, r31
     850:	ff 24       	eor	r15, r15
     852:	f0 2d       	mov	r31, r0
     854:	ec 0e       	add	r14, r28
     856:	fd 1e       	adc	r15, r29
     858:	0f 2e       	mov	r0, r31
     85a:	f8 e1       	ldi	r31, 0x18	; 24
     85c:	cf 2e       	mov	r12, r31
     85e:	dd 24       	eor	r13, r13
     860:	f0 2d       	mov	r31, r0
     862:	cc 0e       	add	r12, r28
     864:	dd 1e       	adc	r13, r29
     866:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     86a:	87 e0       	ldi	r24, 0x07	; 7
     86c:	89 8f       	std	Y+25, r24	; 0x19
     86e:	0f 2e       	mov	r0, r31
     870:	f6 e0       	ldi	r31, 0x06	; 6
     872:	4f 2e       	mov	r4, r31
     874:	55 24       	eor	r5, r5
     876:	f0 2d       	mov	r31, r0
     878:	5b 8e       	std	Y+27, r5	; 0x1b
     87a:	4a 8e       	std	Y+26, r4	; 0x1a
     87c:	1c 8e       	std	Y+28, r1	; 0x1c
     87e:	c4 01       	movw	r24, r8
     880:	c6 96       	adiw	r24, 0x36	; 54
     882:	be 01       	movw	r22, r28
     884:	67 5e       	subi	r22, 0xE7	; 231
     886:	7f 4f       	sbci	r23, 0xFF	; 255
     888:	47 e3       	ldi	r20, 0x37	; 55
     88a:	50 e0       	ldi	r21, 0x00	; 0
     88c:	26 e3       	ldi	r18, 0x36	; 54
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	0f 2e       	mov	r0, r31
     892:	fa e1       	ldi	r31, 0x1A	; 26
     894:	ef 2e       	mov	r14, r31
     896:	ff 24       	eor	r15, r15
     898:	f0 2d       	mov	r31, r0
     89a:	ec 0e       	add	r14, r28
     89c:	fd 1e       	adc	r15, r29
     89e:	0f 2e       	mov	r0, r31
     8a0:	fc e1       	ldi	r31, 0x1C	; 28
     8a2:	cf 2e       	mov	r12, r31
     8a4:	dd 24       	eor	r13, r13
     8a6:	f0 2d       	mov	r31, r0
     8a8:	cc 0e       	add	r12, r28
     8aa:	dd 1e       	adc	r13, r29
     8ac:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     8b0:	88 e0       	ldi	r24, 0x08	; 8
     8b2:	8d 8f       	std	Y+29, r24	; 0x1d
     8b4:	0f 2e       	mov	r0, r31
     8b6:	f7 e0       	ldi	r31, 0x07	; 7
     8b8:	6f 2e       	mov	r6, r31
     8ba:	77 24       	eor	r7, r7
     8bc:	f0 2d       	mov	r31, r0
     8be:	7f 8e       	std	Y+31, r7	; 0x1f
     8c0:	6e 8e       	std	Y+30, r6	; 0x1e
     8c2:	18 a2       	lds	r17, 0x98
     8c4:	c4 01       	movw	r24, r8
     8c6:	cf 96       	adiw	r24, 0x3f	; 63
     8c8:	be 01       	movw	r22, r28
     8ca:	63 5e       	subi	r22, 0xE3	; 227
     8cc:	7f 4f       	sbci	r23, 0xFF	; 255
     8ce:	47 e3       	ldi	r20, 0x37	; 55
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	26 e3       	ldi	r18, 0x36	; 54
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	0f 2e       	mov	r0, r31
     8d8:	fe e1       	ldi	r31, 0x1E	; 30
     8da:	ef 2e       	mov	r14, r31
     8dc:	ff 24       	eor	r15, r15
     8de:	f0 2d       	mov	r31, r0
     8e0:	ec 0e       	add	r14, r28
     8e2:	fd 1e       	adc	r15, r29
     8e4:	cc 24       	eor	r12, r12
     8e6:	dd 24       	eor	r13, r13
     8e8:	68 94       	set
     8ea:	c5 f8       	bld	r12, 5
     8ec:	cc 0e       	add	r12, r28
     8ee:	dd 1e       	adc	r13, r29
     8f0:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     8f4:	8e e0       	ldi	r24, 0x0E	; 14
     8f6:	89 a3       	lds	r24, 0x59
     8f8:	1b a2       	lds	r17, 0x9b
     8fa:	1a a2       	lds	r17, 0x9a
     8fc:	1c a2       	lds	r17, 0x9c
     8fe:	8c ea       	ldi	r24, 0xAC	; 172
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	be 01       	movw	r22, r28
     904:	6f 5d       	subi	r22, 0xDF	; 223
     906:	7f 4f       	sbci	r23, 0xFF	; 255
     908:	41 e3       	ldi	r20, 0x31	; 49
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	20 e3       	ldi	r18, 0x30	; 48
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	02 e3       	ldi	r16, 0x32	; 50
     912:	10 e0       	ldi	r17, 0x00	; 0
     914:	0f 2e       	mov	r0, r31
     916:	f2 e2       	ldi	r31, 0x22	; 34
     918:	ef 2e       	mov	r14, r31
     91a:	ff 24       	eor	r15, r15
     91c:	f0 2d       	mov	r31, r0
     91e:	ec 0e       	add	r14, r28
     920:	fd 1e       	adc	r15, r29
     922:	0f 2e       	mov	r0, r31
     924:	f4 e2       	ldi	r31, 0x24	; 36
     926:	cf 2e       	mov	r12, r31
     928:	dd 24       	eor	r13, r13
     92a:	f0 2d       	mov	r31, r0
     92c:	cc 0e       	add	r12, r28
     92e:	dd 1e       	adc	r13, r29
     930:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     934:	8f e0       	ldi	r24, 0x0F	; 15
     936:	8d a3       	lds	r24, 0x5d
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	9f a3       	lds	r25, 0x5f
     93e:	8e a3       	lds	r24, 0x5e
     940:	18 a6       	lds	r17, 0xb8
     942:	85 eb       	ldi	r24, 0xB5	; 181
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	be 01       	movw	r22, r28
     948:	6b 5d       	subi	r22, 0xDB	; 219
     94a:	7f 4f       	sbci	r23, 0xFF	; 255
     94c:	41 e3       	ldi	r20, 0x31	; 49
     94e:	50 e0       	ldi	r21, 0x00	; 0
     950:	20 e3       	ldi	r18, 0x30	; 48
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	0f 2e       	mov	r0, r31
     956:	f6 e2       	ldi	r31, 0x26	; 38
     958:	ef 2e       	mov	r14, r31
     95a:	ff 24       	eor	r15, r15
     95c:	f0 2d       	mov	r31, r0
     95e:	ec 0e       	add	r14, r28
     960:	fd 1e       	adc	r15, r29
     962:	0f 2e       	mov	r0, r31
     964:	f8 e2       	ldi	r31, 0x28	; 40
     966:	cf 2e       	mov	r12, r31
     968:	dd 24       	eor	r13, r13
     96a:	f0 2d       	mov	r31, r0
     96c:	cc 0e       	add	r12, r28
     96e:	dd 1e       	adc	r13, r29
     970:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     974:	80 e1       	ldi	r24, 0x10	; 16
     976:	89 a7       	lds	r24, 0x79
     978:	82 e0       	ldi	r24, 0x02	; 2
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	9b a7       	lds	r25, 0x7b
     97e:	8a a7       	lds	r24, 0x7a
     980:	bc a6       	lds	r27, 0xbc
     982:	8e eb       	ldi	r24, 0xBE	; 190
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	be 01       	movw	r22, r28
     988:	67 5d       	subi	r22, 0xD7	; 215
     98a:	7f 4f       	sbci	r23, 0xFF	; 255
     98c:	41 e3       	ldi	r20, 0x31	; 49
     98e:	50 e0       	ldi	r21, 0x00	; 0
     990:	20 e3       	ldi	r18, 0x30	; 48
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	0f 2e       	mov	r0, r31
     996:	fa e2       	ldi	r31, 0x2A	; 42
     998:	ef 2e       	mov	r14, r31
     99a:	ff 24       	eor	r15, r15
     99c:	f0 2d       	mov	r31, r0
     99e:	ec 0e       	add	r14, r28
     9a0:	fd 1e       	adc	r15, r29
     9a2:	0f 2e       	mov	r0, r31
     9a4:	fc e2       	ldi	r31, 0x2C	; 44
     9a6:	cf 2e       	mov	r12, r31
     9a8:	dd 24       	eor	r13, r13
     9aa:	f0 2d       	mov	r31, r0
     9ac:	cc 0e       	add	r12, r28
     9ae:	dd 1e       	adc	r13, r29
     9b0:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     9b4:	81 e1       	ldi	r24, 0x11	; 17
     9b6:	8d a7       	lds	r24, 0x7d
     9b8:	83 e0       	ldi	r24, 0x03	; 3
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	9f a7       	lds	r25, 0x7f
     9be:	8e a7       	lds	r24, 0x7e
     9c0:	b8 aa       	sts	0x98, r27
     9c2:	87 ec       	ldi	r24, 0xC7	; 199
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	be 01       	movw	r22, r28
     9c8:	63 5d       	subi	r22, 0xD3	; 211
     9ca:	7f 4f       	sbci	r23, 0xFF	; 255
     9cc:	41 e3       	ldi	r20, 0x31	; 49
     9ce:	50 e0       	ldi	r21, 0x00	; 0
     9d0:	20 e3       	ldi	r18, 0x30	; 48
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	0f 2e       	mov	r0, r31
     9d6:	fe e2       	ldi	r31, 0x2E	; 46
     9d8:	ef 2e       	mov	r14, r31
     9da:	ff 24       	eor	r15, r15
     9dc:	f0 2d       	mov	r31, r0
     9de:	ec 0e       	add	r14, r28
     9e0:	fd 1e       	adc	r15, r29
     9e2:	0f 2e       	mov	r0, r31
     9e4:	f0 e3       	ldi	r31, 0x30	; 48
     9e6:	cf 2e       	mov	r12, r31
     9e8:	dd 24       	eor	r13, r13
     9ea:	f0 2d       	mov	r31, r0
     9ec:	cc 0e       	add	r12, r28
     9ee:	dd 1e       	adc	r13, r29
     9f0:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     9f4:	82 e1       	ldi	r24, 0x12	; 18
     9f6:	89 ab       	sts	0x59, r24
     9f8:	84 e0       	ldi	r24, 0x04	; 4
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	9b ab       	sts	0x5b, r25
     9fe:	8a ab       	sts	0x5a, r24
     a00:	bc aa       	sts	0x9c, r27
     a02:	80 ed       	ldi	r24, 0xD0	; 208
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	be 01       	movw	r22, r28
     a08:	6f 5c       	subi	r22, 0xCF	; 207
     a0a:	7f 4f       	sbci	r23, 0xFF	; 255
     a0c:	41 e3       	ldi	r20, 0x31	; 49
     a0e:	50 e0       	ldi	r21, 0x00	; 0
     a10:	20 e3       	ldi	r18, 0x30	; 48
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	0f 2e       	mov	r0, r31
     a16:	f2 e3       	ldi	r31, 0x32	; 50
     a18:	ef 2e       	mov	r14, r31
     a1a:	ff 24       	eor	r15, r15
     a1c:	f0 2d       	mov	r31, r0
     a1e:	ec 0e       	add	r14, r28
     a20:	fd 1e       	adc	r15, r29
     a22:	0f 2e       	mov	r0, r31
     a24:	f4 e3       	ldi	r31, 0x34	; 52
     a26:	cf 2e       	mov	r12, r31
     a28:	dd 24       	eor	r13, r13
     a2a:	f0 2d       	mov	r31, r0
     a2c:	cc 0e       	add	r12, r28
     a2e:	dd 1e       	adc	r13, r29
     a30:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     a34:	83 e1       	ldi	r24, 0x13	; 19
     a36:	8d ab       	sts	0x5d, r24
     a38:	3f aa       	sts	0x9f, r19
     a3a:	2e aa       	sts	0x9e, r18
     a3c:	b8 ae       	sts	0xb8, r27
     a3e:	89 ed       	ldi	r24, 0xD9	; 217
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	be 01       	movw	r22, r28
     a44:	6b 5c       	subi	r22, 0xCB	; 203
     a46:	7f 4f       	sbci	r23, 0xFF	; 255
     a48:	41 e3       	ldi	r20, 0x31	; 49
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	20 e3       	ldi	r18, 0x30	; 48
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	0f 2e       	mov	r0, r31
     a52:	f6 e3       	ldi	r31, 0x36	; 54
     a54:	ef 2e       	mov	r14, r31
     a56:	ff 24       	eor	r15, r15
     a58:	f0 2d       	mov	r31, r0
     a5a:	ec 0e       	add	r14, r28
     a5c:	fd 1e       	adc	r15, r29
     a5e:	0f 2e       	mov	r0, r31
     a60:	f8 e3       	ldi	r31, 0x38	; 56
     a62:	cf 2e       	mov	r12, r31
     a64:	dd 24       	eor	r13, r13
     a66:	f0 2d       	mov	r31, r0
     a68:	cc 0e       	add	r12, r28
     a6a:	dd 1e       	adc	r13, r29
     a6c:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     a70:	84 e1       	ldi	r24, 0x14	; 20
     a72:	89 af       	sts	0x79, r24
     a74:	5b ae       	sts	0xbb, r21
     a76:	4a ae       	sts	0xba, r20
     a78:	bc ae       	sts	0xbc, r27
     a7a:	82 ee       	ldi	r24, 0xE2	; 226
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	be 01       	movw	r22, r28
     a80:	67 5c       	subi	r22, 0xC7	; 199
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	41 e3       	ldi	r20, 0x31	; 49
     a86:	50 e0       	ldi	r21, 0x00	; 0
     a88:	20 e3       	ldi	r18, 0x30	; 48
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	0f 2e       	mov	r0, r31
     a8e:	fa e3       	ldi	r31, 0x3A	; 58
     a90:	ef 2e       	mov	r14, r31
     a92:	ff 24       	eor	r15, r15
     a94:	f0 2d       	mov	r31, r0
     a96:	ec 0e       	add	r14, r28
     a98:	fd 1e       	adc	r15, r29
     a9a:	0f 2e       	mov	r0, r31
     a9c:	fc e3       	ldi	r31, 0x3C	; 60
     a9e:	cf 2e       	mov	r12, r31
     aa0:	dd 24       	eor	r13, r13
     aa2:	f0 2d       	mov	r31, r0
     aa4:	cc 0e       	add	r12, r28
     aa6:	dd 1e       	adc	r13, r29
     aa8:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     aac:	85 e1       	ldi	r24, 0x15	; 21
     aae:	8d af       	sts	0x7d, r24
     ab0:	7f ae       	sts	0xbf, r23
     ab2:	6e ae       	sts	0xbe, r22
     ab4:	21 96       	adiw	r28, 0x01	; 1
     ab6:	bf ae       	sts	0xbf, r27
     ab8:	21 97       	sbiw	r28, 0x01	; 1
     aba:	8b ee       	ldi	r24, 0xEB	; 235
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	be 01       	movw	r22, r28
     ac0:	63 5c       	subi	r22, 0xC3	; 195
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	41 e3       	ldi	r20, 0x31	; 49
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	20 e3       	ldi	r18, 0x30	; 48
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	0f 2e       	mov	r0, r31
     ace:	fe e3       	ldi	r31, 0x3E	; 62
     ad0:	ef 2e       	mov	r14, r31
     ad2:	ff 24       	eor	r15, r15
     ad4:	f0 2d       	mov	r31, r0
     ad6:	ec 0e       	add	r14, r28
     ad8:	fd 1e       	adc	r15, r29
     ada:	cc 24       	eor	r12, r12
     adc:	dd 24       	eor	r13, r13
     ade:	68 94       	set
     ae0:	c6 f8       	bld	r12, 6
     ae2:	cc 0e       	add	r12, r28
     ae4:	dd 1e       	adc	r13, r29
     ae6:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     aea:	86 e1       	ldi	r24, 0x16	; 22
     aec:	22 96       	adiw	r28, 0x02	; 2
     aee:	8f af       	sts	0x7f, r24
     af0:	22 97       	sbiw	r28, 0x02	; 2
     af2:	24 96       	adiw	r28, 0x04	; 4
     af4:	1f ae       	sts	0xbf, r17
     af6:	1e ae       	sts	0xbe, r17
     af8:	24 97       	sbiw	r28, 0x04	; 4
     afa:	25 96       	adiw	r28, 0x05	; 5
     afc:	bf ae       	sts	0xbf, r27
     afe:	25 97       	sbiw	r28, 0x05	; 5
     b00:	84 ef       	ldi	r24, 0xF4	; 244
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	be 01       	movw	r22, r28
     b06:	6f 5b       	subi	r22, 0xBF	; 191
     b08:	7f 4f       	sbci	r23, 0xFF	; 255
     b0a:	44 e3       	ldi	r20, 0x34	; 52
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	23 e3       	ldi	r18, 0x33	; 51
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	05 e3       	ldi	r16, 0x35	; 53
     b14:	10 e0       	ldi	r17, 0x00	; 0
     b16:	0f 2e       	mov	r0, r31
     b18:	f2 e4       	ldi	r31, 0x42	; 66
     b1a:	ef 2e       	mov	r14, r31
     b1c:	ff 24       	eor	r15, r15
     b1e:	f0 2d       	mov	r31, r0
     b20:	ec 0e       	add	r14, r28
     b22:	fd 1e       	adc	r15, r29
     b24:	0f 2e       	mov	r0, r31
     b26:	f4 e4       	ldi	r31, 0x44	; 68
     b28:	cf 2e       	mov	r12, r31
     b2a:	dd 24       	eor	r13, r13
     b2c:	f0 2d       	mov	r31, r0
     b2e:	cc 0e       	add	r12, r28
     b30:	dd 1e       	adc	r13, r29
     b32:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     b36:	87 e1       	ldi	r24, 0x17	; 23
     b38:	26 96       	adiw	r28, 0x06	; 6
     b3a:	8f af       	sts	0x7f, r24
     b3c:	26 97       	sbiw	r28, 0x06	; 6
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	28 96       	adiw	r28, 0x08	; 8
     b44:	9f af       	sts	0x7f, r25
     b46:	8e af       	sts	0x7e, r24
     b48:	28 97       	sbiw	r28, 0x08	; 8
     b4a:	29 96       	adiw	r28, 0x09	; 9
     b4c:	bf ae       	sts	0xbf, r27
     b4e:	29 97       	sbiw	r28, 0x09	; 9
     b50:	8d ef       	ldi	r24, 0xFD	; 253
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	be 01       	movw	r22, r28
     b56:	6b 5b       	subi	r22, 0xBB	; 187
     b58:	7f 4f       	sbci	r23, 0xFF	; 255
     b5a:	44 e3       	ldi	r20, 0x34	; 52
     b5c:	50 e0       	ldi	r21, 0x00	; 0
     b5e:	23 e3       	ldi	r18, 0x33	; 51
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	0f 2e       	mov	r0, r31
     b64:	f6 e4       	ldi	r31, 0x46	; 70
     b66:	ef 2e       	mov	r14, r31
     b68:	ff 24       	eor	r15, r15
     b6a:	f0 2d       	mov	r31, r0
     b6c:	ec 0e       	add	r14, r28
     b6e:	fd 1e       	adc	r15, r29
     b70:	0f 2e       	mov	r0, r31
     b72:	f8 e4       	ldi	r31, 0x48	; 72
     b74:	cf 2e       	mov	r12, r31
     b76:	dd 24       	eor	r13, r13
     b78:	f0 2d       	mov	r31, r0
     b7a:	cc 0e       	add	r12, r28
     b7c:	dd 1e       	adc	r13, r29
     b7e:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     b82:	88 e1       	ldi	r24, 0x18	; 24
     b84:	2a 96       	adiw	r28, 0x0a	; 10
     b86:	8f af       	sts	0x7f, r24
     b88:	2a 97       	sbiw	r28, 0x0a	; 10
     b8a:	82 e0       	ldi	r24, 0x02	; 2
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	2c 96       	adiw	r28, 0x0c	; 12
     b90:	9f af       	sts	0x7f, r25
     b92:	8e af       	sts	0x7e, r24
     b94:	2c 97       	sbiw	r28, 0x0c	; 12
     b96:	2d 96       	adiw	r28, 0x0d	; 13
     b98:	bf ae       	sts	0xbf, r27
     b9a:	2d 97       	sbiw	r28, 0x0d	; 13
     b9c:	86 e0       	ldi	r24, 0x06	; 6
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	be 01       	movw	r22, r28
     ba2:	67 5b       	subi	r22, 0xB7	; 183
     ba4:	7f 4f       	sbci	r23, 0xFF	; 255
     ba6:	44 e3       	ldi	r20, 0x34	; 52
     ba8:	50 e0       	ldi	r21, 0x00	; 0
     baa:	23 e3       	ldi	r18, 0x33	; 51
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	0f 2e       	mov	r0, r31
     bb0:	fa e4       	ldi	r31, 0x4A	; 74
     bb2:	ef 2e       	mov	r14, r31
     bb4:	ff 24       	eor	r15, r15
     bb6:	f0 2d       	mov	r31, r0
     bb8:	ec 0e       	add	r14, r28
     bba:	fd 1e       	adc	r15, r29
     bbc:	0f 2e       	mov	r0, r31
     bbe:	fc e4       	ldi	r31, 0x4C	; 76
     bc0:	cf 2e       	mov	r12, r31
     bc2:	dd 24       	eor	r13, r13
     bc4:	f0 2d       	mov	r31, r0
     bc6:	cc 0e       	add	r12, r28
     bc8:	dd 1e       	adc	r13, r29
     bca:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     bce:	89 e1       	ldi	r24, 0x19	; 25
     bd0:	2e 96       	adiw	r28, 0x0e	; 14
     bd2:	8f af       	sts	0x7f, r24
     bd4:	2e 97       	sbiw	r28, 0x0e	; 14
     bd6:	83 e0       	ldi	r24, 0x03	; 3
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	60 96       	adiw	r28, 0x10	; 16
     bdc:	9f af       	sts	0x7f, r25
     bde:	8e af       	sts	0x7e, r24
     be0:	60 97       	sbiw	r28, 0x10	; 16
     be2:	61 96       	adiw	r28, 0x11	; 17
     be4:	bf ae       	sts	0xbf, r27
     be6:	61 97       	sbiw	r28, 0x11	; 17
     be8:	8f e0       	ldi	r24, 0x0F	; 15
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	be 01       	movw	r22, r28
     bee:	63 5b       	subi	r22, 0xB3	; 179
     bf0:	7f 4f       	sbci	r23, 0xFF	; 255
     bf2:	44 e3       	ldi	r20, 0x34	; 52
     bf4:	50 e0       	ldi	r21, 0x00	; 0
     bf6:	23 e3       	ldi	r18, 0x33	; 51
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	0f 2e       	mov	r0, r31
     bfc:	fe e4       	ldi	r31, 0x4E	; 78
     bfe:	ef 2e       	mov	r14, r31
     c00:	ff 24       	eor	r15, r15
     c02:	f0 2d       	mov	r31, r0
     c04:	ec 0e       	add	r14, r28
     c06:	fd 1e       	adc	r15, r29
     c08:	0f 2e       	mov	r0, r31
     c0a:	f0 e5       	ldi	r31, 0x50	; 80
     c0c:	cf 2e       	mov	r12, r31
     c0e:	dd 24       	eor	r13, r13
     c10:	f0 2d       	mov	r31, r0
     c12:	cc 0e       	add	r12, r28
     c14:	dd 1e       	adc	r13, r29
     c16:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     c1a:	8a e1       	ldi	r24, 0x1A	; 26
     c1c:	62 96       	adiw	r28, 0x12	; 18
     c1e:	8f af       	sts	0x7f, r24
     c20:	62 97       	sbiw	r28, 0x12	; 18
     c22:	84 e0       	ldi	r24, 0x04	; 4
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	64 96       	adiw	r28, 0x14	; 20
     c28:	9f af       	sts	0x7f, r25
     c2a:	8e af       	sts	0x7e, r24
     c2c:	64 97       	sbiw	r28, 0x14	; 20
     c2e:	65 96       	adiw	r28, 0x15	; 21
     c30:	bf ae       	sts	0xbf, r27
     c32:	65 97       	sbiw	r28, 0x15	; 21
     c34:	88 e1       	ldi	r24, 0x18	; 24
     c36:	91 e0       	ldi	r25, 0x01	; 1
     c38:	be 01       	movw	r22, r28
     c3a:	6f 5a       	subi	r22, 0xAF	; 175
     c3c:	7f 4f       	sbci	r23, 0xFF	; 255
     c3e:	44 e3       	ldi	r20, 0x34	; 52
     c40:	50 e0       	ldi	r21, 0x00	; 0
     c42:	23 e3       	ldi	r18, 0x33	; 51
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	0f 2e       	mov	r0, r31
     c48:	f2 e5       	ldi	r31, 0x52	; 82
     c4a:	ef 2e       	mov	r14, r31
     c4c:	ff 24       	eor	r15, r15
     c4e:	f0 2d       	mov	r31, r0
     c50:	ec 0e       	add	r14, r28
     c52:	fd 1e       	adc	r15, r29
     c54:	0f 2e       	mov	r0, r31
     c56:	f4 e5       	ldi	r31, 0x54	; 84
     c58:	cf 2e       	mov	r12, r31
     c5a:	dd 24       	eor	r13, r13
     c5c:	f0 2d       	mov	r31, r0
     c5e:	cc 0e       	add	r12, r28
     c60:	dd 1e       	adc	r13, r29
     c62:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     c66:	8b e1       	ldi	r24, 0x1B	; 27
     c68:	66 96       	adiw	r28, 0x16	; 22
     c6a:	8f af       	sts	0x7f, r24
     c6c:	66 97       	sbiw	r28, 0x16	; 22
     c6e:	68 96       	adiw	r28, 0x18	; 24
     c70:	3f ae       	sts	0xbf, r19
     c72:	2e ae       	sts	0xbe, r18
     c74:	68 97       	sbiw	r28, 0x18	; 24
     c76:	69 96       	adiw	r28, 0x19	; 25
     c78:	bf ae       	sts	0xbf, r27
     c7a:	69 97       	sbiw	r28, 0x19	; 25
     c7c:	81 e2       	ldi	r24, 0x21	; 33
     c7e:	91 e0       	ldi	r25, 0x01	; 1
     c80:	be 01       	movw	r22, r28
     c82:	6b 5a       	subi	r22, 0xAB	; 171
     c84:	7f 4f       	sbci	r23, 0xFF	; 255
     c86:	44 e3       	ldi	r20, 0x34	; 52
     c88:	50 e0       	ldi	r21, 0x00	; 0
     c8a:	23 e3       	ldi	r18, 0x33	; 51
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	0f 2e       	mov	r0, r31
     c90:	f6 e5       	ldi	r31, 0x56	; 86
     c92:	ef 2e       	mov	r14, r31
     c94:	ff 24       	eor	r15, r15
     c96:	f0 2d       	mov	r31, r0
     c98:	ec 0e       	add	r14, r28
     c9a:	fd 1e       	adc	r15, r29
     c9c:	0f 2e       	mov	r0, r31
     c9e:	f8 e5       	ldi	r31, 0x58	; 88
     ca0:	cf 2e       	mov	r12, r31
     ca2:	dd 24       	eor	r13, r13
     ca4:	f0 2d       	mov	r31, r0
     ca6:	cc 0e       	add	r12, r28
     ca8:	dd 1e       	adc	r13, r29
     caa:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     cae:	8c e1       	ldi	r24, 0x1C	; 28
     cb0:	6a 96       	adiw	r28, 0x1a	; 26
     cb2:	8f af       	sts	0x7f, r24
     cb4:	6a 97       	sbiw	r28, 0x1a	; 26
     cb6:	6c 96       	adiw	r28, 0x1c	; 28
     cb8:	5f ae       	sts	0xbf, r21
     cba:	4e ae       	sts	0xbe, r20
     cbc:	6c 97       	sbiw	r28, 0x1c	; 28
     cbe:	6d 96       	adiw	r28, 0x1d	; 29
     cc0:	bf ae       	sts	0xbf, r27
     cc2:	6d 97       	sbiw	r28, 0x1d	; 29
     cc4:	8a e2       	ldi	r24, 0x2A	; 42
     cc6:	91 e0       	ldi	r25, 0x01	; 1
     cc8:	be 01       	movw	r22, r28
     cca:	67 5a       	subi	r22, 0xA7	; 167
     ccc:	7f 4f       	sbci	r23, 0xFF	; 255
     cce:	44 e3       	ldi	r20, 0x34	; 52
     cd0:	50 e0       	ldi	r21, 0x00	; 0
     cd2:	23 e3       	ldi	r18, 0x33	; 51
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	0f 2e       	mov	r0, r31
     cd8:	fa e5       	ldi	r31, 0x5A	; 90
     cda:	ef 2e       	mov	r14, r31
     cdc:	ff 24       	eor	r15, r15
     cde:	f0 2d       	mov	r31, r0
     ce0:	ec 0e       	add	r14, r28
     ce2:	fd 1e       	adc	r15, r29
     ce4:	0f 2e       	mov	r0, r31
     ce6:	fc e5       	ldi	r31, 0x5C	; 92
     ce8:	cf 2e       	mov	r12, r31
     cea:	dd 24       	eor	r13, r13
     cec:	f0 2d       	mov	r31, r0
     cee:	cc 0e       	add	r12, r28
     cf0:	dd 1e       	adc	r13, r29
     cf2:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     cf6:	8d e1       	ldi	r24, 0x1D	; 29
     cf8:	6e 96       	adiw	r28, 0x1e	; 30
     cfa:	8f af       	sts	0x7f, r24
     cfc:	6e 97       	sbiw	r28, 0x1e	; 30
     cfe:	a0 96       	adiw	r28, 0x20	; 32
     d00:	7f ae       	sts	0xbf, r23
     d02:	6e ae       	sts	0xbe, r22
     d04:	a0 97       	sbiw	r28, 0x20	; 32
     d06:	a1 96       	adiw	r28, 0x21	; 33
     d08:	bf ae       	sts	0xbf, r27
     d0a:	a1 97       	sbiw	r28, 0x21	; 33
     d0c:	83 e3       	ldi	r24, 0x33	; 51
     d0e:	91 e0       	ldi	r25, 0x01	; 1
     d10:	be 01       	movw	r22, r28
     d12:	63 5a       	subi	r22, 0xA3	; 163
     d14:	7f 4f       	sbci	r23, 0xFF	; 255
     d16:	44 e3       	ldi	r20, 0x34	; 52
     d18:	50 e0       	ldi	r21, 0x00	; 0
     d1a:	23 e3       	ldi	r18, 0x33	; 51
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	0f 2e       	mov	r0, r31
     d20:	fe e5       	ldi	r31, 0x5E	; 94
     d22:	ef 2e       	mov	r14, r31
     d24:	ff 24       	eor	r15, r15
     d26:	f0 2d       	mov	r31, r0
     d28:	ec 0e       	add	r14, r28
     d2a:	fd 1e       	adc	r15, r29
     d2c:	0f 2e       	mov	r0, r31
     d2e:	f0 e6       	ldi	r31, 0x60	; 96
     d30:	cf 2e       	mov	r12, r31
     d32:	dd 24       	eor	r13, r13
     d34:	f0 2d       	mov	r31, r0
     d36:	cc 0e       	add	r12, r28
     d38:	dd 1e       	adc	r13, r29
     d3a:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     d3e:	81 e2       	ldi	r24, 0x21	; 33
     d40:	a2 96       	adiw	r28, 0x22	; 34
     d42:	8f af       	sts	0x7f, r24
     d44:	a2 97       	sbiw	r28, 0x22	; 34
     d46:	a4 96       	adiw	r28, 0x24	; 36
     d48:	7f ae       	sts	0xbf, r23
     d4a:	6e ae       	sts	0xbe, r22
     d4c:	a4 97       	sbiw	r28, 0x24	; 36
     d4e:	a5 96       	adiw	r28, 0x25	; 37
     d50:	bf ae       	sts	0xbf, r27
     d52:	a5 97       	sbiw	r28, 0x25	; 37
     d54:	8c e3       	ldi	r24, 0x3C	; 60
     d56:	91 e0       	ldi	r25, 0x01	; 1
     d58:	be 01       	movw	r22, r28
     d5a:	6f 59       	subi	r22, 0x9F	; 159
     d5c:	7f 4f       	sbci	r23, 0xFF	; 255
     d5e:	4a e3       	ldi	r20, 0x3A	; 58
     d60:	50 e0       	ldi	r21, 0x00	; 0
     d62:	29 e3       	ldi	r18, 0x39	; 57
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	0b e3       	ldi	r16, 0x3B	; 59
     d68:	10 e0       	ldi	r17, 0x00	; 0
     d6a:	0f 2e       	mov	r0, r31
     d6c:	f2 e6       	ldi	r31, 0x62	; 98
     d6e:	ef 2e       	mov	r14, r31
     d70:	ff 24       	eor	r15, r15
     d72:	f0 2d       	mov	r31, r0
     d74:	ec 0e       	add	r14, r28
     d76:	fd 1e       	adc	r15, r29
     d78:	0f 2e       	mov	r0, r31
     d7a:	f4 e6       	ldi	r31, 0x64	; 100
     d7c:	cf 2e       	mov	r12, r31
     d7e:	dd 24       	eor	r13, r13
     d80:	f0 2d       	mov	r31, r0
     d82:	cc 0e       	add	r12, r28
     d84:	dd 1e       	adc	r13, r29
     d86:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     d8a:	82 e2       	ldi	r24, 0x22	; 34
     d8c:	a6 96       	adiw	r28, 0x26	; 38
     d8e:	8f af       	sts	0x7f, r24
     d90:	a6 97       	sbiw	r28, 0x26	; 38
     d92:	a8 96       	adiw	r28, 0x28	; 40
     d94:	5f ae       	sts	0xbf, r21
     d96:	4e ae       	sts	0xbe, r20
     d98:	a8 97       	sbiw	r28, 0x28	; 40
     d9a:	a9 96       	adiw	r28, 0x29	; 41
     d9c:	bf ae       	sts	0xbf, r27
     d9e:	a9 97       	sbiw	r28, 0x29	; 41
     da0:	85 e4       	ldi	r24, 0x45	; 69
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	be 01       	movw	r22, r28
     da6:	6b 59       	subi	r22, 0x9B	; 155
     da8:	7f 4f       	sbci	r23, 0xFF	; 255
     daa:	4a e3       	ldi	r20, 0x3A	; 58
     dac:	50 e0       	ldi	r21, 0x00	; 0
     dae:	29 e3       	ldi	r18, 0x39	; 57
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	0f 2e       	mov	r0, r31
     db4:	f6 e6       	ldi	r31, 0x66	; 102
     db6:	ef 2e       	mov	r14, r31
     db8:	ff 24       	eor	r15, r15
     dba:	f0 2d       	mov	r31, r0
     dbc:	ec 0e       	add	r14, r28
     dbe:	fd 1e       	adc	r15, r29
     dc0:	0f 2e       	mov	r0, r31
     dc2:	f8 e6       	ldi	r31, 0x68	; 104
     dc4:	cf 2e       	mov	r12, r31
     dc6:	dd 24       	eor	r13, r13
     dc8:	f0 2d       	mov	r31, r0
     dca:	cc 0e       	add	r12, r28
     dcc:	dd 1e       	adc	r13, r29
     dce:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     dd2:	83 e2       	ldi	r24, 0x23	; 35
     dd4:	aa 96       	adiw	r28, 0x2a	; 42
     dd6:	8f af       	sts	0x7f, r24
     dd8:	aa 97       	sbiw	r28, 0x2a	; 42
     dda:	ac 96       	adiw	r28, 0x2c	; 44
     ddc:	3f ae       	sts	0xbf, r19
     dde:	2e ae       	sts	0xbe, r18
     de0:	ac 97       	sbiw	r28, 0x2c	; 44
     de2:	ad 96       	adiw	r28, 0x2d	; 45
     de4:	bf ae       	sts	0xbf, r27
     de6:	ad 97       	sbiw	r28, 0x2d	; 45
     de8:	8e e4       	ldi	r24, 0x4E	; 78
     dea:	91 e0       	ldi	r25, 0x01	; 1
     dec:	be 01       	movw	r22, r28
     dee:	67 59       	subi	r22, 0x97	; 151
     df0:	7f 4f       	sbci	r23, 0xFF	; 255
     df2:	4a e3       	ldi	r20, 0x3A	; 58
     df4:	50 e0       	ldi	r21, 0x00	; 0
     df6:	29 e3       	ldi	r18, 0x39	; 57
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	0f 2e       	mov	r0, r31
     dfc:	fa e6       	ldi	r31, 0x6A	; 106
     dfe:	ef 2e       	mov	r14, r31
     e00:	ff 24       	eor	r15, r15
     e02:	f0 2d       	mov	r31, r0
     e04:	ec 0e       	add	r14, r28
     e06:	fd 1e       	adc	r15, r29
     e08:	0f 2e       	mov	r0, r31
     e0a:	fc e6       	ldi	r31, 0x6C	; 108
     e0c:	cf 2e       	mov	r12, r31
     e0e:	dd 24       	eor	r13, r13
     e10:	f0 2d       	mov	r31, r0
     e12:	cc 0e       	add	r12, r28
     e14:	dd 1e       	adc	r13, r29
     e16:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     e1a:	84 e2       	ldi	r24, 0x24	; 36
     e1c:	ae 96       	adiw	r28, 0x2e	; 46
     e1e:	8f af       	sts	0x7f, r24
     e20:	ae 97       	sbiw	r28, 0x2e	; 46
     e22:	84 e0       	ldi	r24, 0x04	; 4
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	e0 96       	adiw	r28, 0x30	; 48
     e28:	9f af       	sts	0x7f, r25
     e2a:	8e af       	sts	0x7e, r24
     e2c:	e0 97       	sbiw	r28, 0x30	; 48
     e2e:	e1 96       	adiw	r28, 0x31	; 49
     e30:	bf ae       	sts	0xbf, r27
     e32:	e1 97       	sbiw	r28, 0x31	; 49
     e34:	87 e5       	ldi	r24, 0x57	; 87
     e36:	91 e0       	ldi	r25, 0x01	; 1
     e38:	be 01       	movw	r22, r28
     e3a:	63 59       	subi	r22, 0x93	; 147
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	4a e3       	ldi	r20, 0x3A	; 58
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	29 e3       	ldi	r18, 0x39	; 57
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	0f 2e       	mov	r0, r31
     e48:	fe e6       	ldi	r31, 0x6E	; 110
     e4a:	ef 2e       	mov	r14, r31
     e4c:	ff 24       	eor	r15, r15
     e4e:	f0 2d       	mov	r31, r0
     e50:	ec 0e       	add	r14, r28
     e52:	fd 1e       	adc	r15, r29
     e54:	0f 2e       	mov	r0, r31
     e56:	f0 e7       	ldi	r31, 0x70	; 112
     e58:	cf 2e       	mov	r12, r31
     e5a:	dd 24       	eor	r13, r13
     e5c:	f0 2d       	mov	r31, r0
     e5e:	cc 0e       	add	r12, r28
     e60:	dd 1e       	adc	r13, r29
     e62:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     e66:	85 e2       	ldi	r24, 0x25	; 37
     e68:	e2 96       	adiw	r28, 0x32	; 50
     e6a:	8f af       	sts	0x7f, r24
     e6c:	e2 97       	sbiw	r28, 0x32	; 50
     e6e:	83 e0       	ldi	r24, 0x03	; 3
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	e4 96       	adiw	r28, 0x34	; 52
     e74:	9f af       	sts	0x7f, r25
     e76:	8e af       	sts	0x7e, r24
     e78:	e4 97       	sbiw	r28, 0x34	; 52
     e7a:	e5 96       	adiw	r28, 0x35	; 53
     e7c:	bf ae       	sts	0xbf, r27
     e7e:	e5 97       	sbiw	r28, 0x35	; 53
     e80:	80 e6       	ldi	r24, 0x60	; 96
     e82:	91 e0       	ldi	r25, 0x01	; 1
     e84:	be 01       	movw	r22, r28
     e86:	6f 58       	subi	r22, 0x8F	; 143
     e88:	7f 4f       	sbci	r23, 0xFF	; 255
     e8a:	4a e3       	ldi	r20, 0x3A	; 58
     e8c:	50 e0       	ldi	r21, 0x00	; 0
     e8e:	29 e3       	ldi	r18, 0x39	; 57
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	0f 2e       	mov	r0, r31
     e94:	f2 e7       	ldi	r31, 0x72	; 114
     e96:	ef 2e       	mov	r14, r31
     e98:	ff 24       	eor	r15, r15
     e9a:	f0 2d       	mov	r31, r0
     e9c:	ec 0e       	add	r14, r28
     e9e:	fd 1e       	adc	r15, r29
     ea0:	0f 2e       	mov	r0, r31
     ea2:	f4 e7       	ldi	r31, 0x74	; 116
     ea4:	cf 2e       	mov	r12, r31
     ea6:	dd 24       	eor	r13, r13
     ea8:	f0 2d       	mov	r31, r0
     eaa:	cc 0e       	add	r12, r28
     eac:	dd 1e       	adc	r13, r29
     eae:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     eb2:	86 e2       	ldi	r24, 0x26	; 38
     eb4:	e6 96       	adiw	r28, 0x36	; 54
     eb6:	8f af       	sts	0x7f, r24
     eb8:	e6 97       	sbiw	r28, 0x36	; 54
     eba:	82 e0       	ldi	r24, 0x02	; 2
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	e8 96       	adiw	r28, 0x38	; 56
     ec0:	9f af       	sts	0x7f, r25
     ec2:	8e af       	sts	0x7e, r24
     ec4:	e8 97       	sbiw	r28, 0x38	; 56
     ec6:	e9 96       	adiw	r28, 0x39	; 57
     ec8:	bf ae       	sts	0xbf, r27
     eca:	e9 97       	sbiw	r28, 0x39	; 57
     ecc:	89 e6       	ldi	r24, 0x69	; 105
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	be 01       	movw	r22, r28
     ed2:	6b 58       	subi	r22, 0x8B	; 139
     ed4:	7f 4f       	sbci	r23, 0xFF	; 255
     ed6:	4a e3       	ldi	r20, 0x3A	; 58
     ed8:	50 e0       	ldi	r21, 0x00	; 0
     eda:	29 e3       	ldi	r18, 0x39	; 57
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	0f 2e       	mov	r0, r31
     ee0:	f6 e7       	ldi	r31, 0x76	; 118
     ee2:	ef 2e       	mov	r14, r31
     ee4:	ff 24       	eor	r15, r15
     ee6:	f0 2d       	mov	r31, r0
     ee8:	ec 0e       	add	r14, r28
     eea:	fd 1e       	adc	r15, r29
     eec:	0f 2e       	mov	r0, r31
     eee:	f8 e7       	ldi	r31, 0x78	; 120
     ef0:	cf 2e       	mov	r12, r31
     ef2:	dd 24       	eor	r13, r13
     ef4:	f0 2d       	mov	r31, r0
     ef6:	cc 0e       	add	r12, r28
     ef8:	dd 1e       	adc	r13, r29
     efa:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     efe:	87 e2       	ldi	r24, 0x27	; 39
     f00:	ea 96       	adiw	r28, 0x3a	; 58
     f02:	8f af       	sts	0x7f, r24
     f04:	ea 97       	sbiw	r28, 0x3a	; 58
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	ec 96       	adiw	r28, 0x3c	; 60
     f0c:	9f af       	sts	0x7f, r25
     f0e:	8e af       	sts	0x7e, r24
     f10:	ec 97       	sbiw	r28, 0x3c	; 60
     f12:	ed 96       	adiw	r28, 0x3d	; 61
     f14:	bf ae       	sts	0xbf, r27
     f16:	ed 97       	sbiw	r28, 0x3d	; 61
     f18:	82 e7       	ldi	r24, 0x72	; 114
     f1a:	91 e0       	ldi	r25, 0x01	; 1
     f1c:	be 01       	movw	r22, r28
     f1e:	67 58       	subi	r22, 0x87	; 135
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	4a e3       	ldi	r20, 0x3A	; 58
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	29 e3       	ldi	r18, 0x39	; 57
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	0f 2e       	mov	r0, r31
     f2c:	fa e7       	ldi	r31, 0x7A	; 122
     f2e:	ef 2e       	mov	r14, r31
     f30:	ff 24       	eor	r15, r15
     f32:	f0 2d       	mov	r31, r0
     f34:	ec 0e       	add	r14, r28
     f36:	fd 1e       	adc	r15, r29
     f38:	0f 2e       	mov	r0, r31
     f3a:	fc e7       	ldi	r31, 0x7C	; 124
     f3c:	cf 2e       	mov	r12, r31
     f3e:	dd 24       	eor	r13, r13
     f40:	f0 2d       	mov	r31, r0
     f42:	cc 0e       	add	r12, r28
     f44:	dd 1e       	adc	r13, r29
     f46:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     f4a:	88 e2       	ldi	r24, 0x28	; 40
     f4c:	ee 96       	adiw	r28, 0x3e	; 62
     f4e:	8f af       	sts	0x7f, r24
     f50:	ee 97       	sbiw	r28, 0x3e	; 62
     f52:	c2 58       	subi	r28, 0x82	; 130
     f54:	df 4f       	sbci	r29, 0xFF	; 255
     f56:	19 82       	std	Y+1, r1	; 0x01
     f58:	18 82       	st	Y, r1
     f5a:	ce 57       	subi	r28, 0x7E	; 126
     f5c:	d0 40       	sbci	r29, 0x00	; 0
     f5e:	c0 58       	subi	r28, 0x80	; 128
     f60:	df 4f       	sbci	r29, 0xFF	; 255
     f62:	b8 82       	st	Y, r11
     f64:	c0 58       	subi	r28, 0x80	; 128
     f66:	d0 40       	sbci	r29, 0x00	; 0
     f68:	8b e7       	ldi	r24, 0x7B	; 123
     f6a:	91 e0       	ldi	r25, 0x01	; 1
     f6c:	be 01       	movw	r22, r28
     f6e:	63 58       	subi	r22, 0x83	; 131
     f70:	7f 4f       	sbci	r23, 0xFF	; 255
     f72:	4a e3       	ldi	r20, 0x3A	; 58
     f74:	50 e0       	ldi	r21, 0x00	; 0
     f76:	29 e3       	ldi	r18, 0x39	; 57
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	0f 2e       	mov	r0, r31
     f7c:	fe e7       	ldi	r31, 0x7E	; 126
     f7e:	ef 2e       	mov	r14, r31
     f80:	ff 24       	eor	r15, r15
     f82:	f0 2d       	mov	r31, r0
     f84:	ec 0e       	add	r14, r28
     f86:	fd 1e       	adc	r15, r29
     f88:	cc 24       	eor	r12, r12
     f8a:	dd 24       	eor	r13, r13
     f8c:	68 94       	set
     f8e:	c7 f8       	bld	r12, 7
     f90:	cc 0e       	add	r12, r28
     f92:	dd 1e       	adc	r13, r29
     f94:	0e 94 35 03 	call	0x66a	; 0x66a <_ZN3PinC1ERKhRVhS3_S3_RKiRKb>
     f98:	c0 58       	subi	r28, 0x80	; 128
     f9a:	df 4f       	sbci	r29, 0xFF	; 255
     f9c:	0f b6       	in	r0, 0x3f	; 63
     f9e:	f8 94       	cli
     fa0:	de bf       	out	0x3e, r29	; 62
     fa2:	0f be       	out	0x3f, r0	; 63
     fa4:	cd bf       	out	0x3d, r28	; 61
     fa6:	df 91       	pop	r29
     fa8:	cf 91       	pop	r28
     faa:	1f 91       	pop	r17
     fac:	0f 91       	pop	r16
     fae:	ff 90       	pop	r15
     fb0:	ef 90       	pop	r14
     fb2:	df 90       	pop	r13
     fb4:	cf 90       	pop	r12
     fb6:	bf 90       	pop	r11
     fb8:	9f 90       	pop	r9
     fba:	8f 90       	pop	r8
     fbc:	7f 90       	pop	r7
     fbe:	6f 90       	pop	r6
     fc0:	5f 90       	pop	r5
     fc2:	4f 90       	pop	r4
     fc4:	3f 90       	pop	r3
     fc6:	2f 90       	pop	r2
     fc8:	08 95       	ret

00000fca <__vector_13>:
char Usart::incomeChar;
bool Usart::newCharReceived;

// definicja wektora przerwan odbioru danych USART
ISR(USART_RXC_vect)
{
     fca:	1f 92       	push	r1
     fcc:	0f 92       	push	r0
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	0f 92       	push	r0
     fd2:	11 24       	eor	r1, r1
     fd4:	8f 93       	push	r24
	Usart::incomeChar = UDR;
     fd6:	8c b1       	in	r24, 0x0c	; 12
     fd8:	80 93 85 01 	sts	0x0185, r24
	Usart::newCharReceived = true;
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	80 93 84 01 	sts	0x0184, r24
}
     fe2:	8f 91       	pop	r24
     fe4:	0f 90       	pop	r0
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	0f 90       	pop	r0
     fea:	1f 90       	pop	r1
     fec:	18 95       	reti

00000fee <_ZN5Usart8ScenarioC1Ev>:

Usart::Scenario::Scenario()
{
}
     fee:	08 95       	ret

00000ff0 <_ZN5Usart8ScenarioC1EPFvvERKh>:

Usart::Scenario::Scenario(void (*function)(), const uint8_t &paramsBytes)
     ff0:	fc 01       	movw	r30, r24
: function(function), paramsBytes(paramsBytes)
     ff2:	71 83       	std	Z+1, r23	; 0x01
     ff4:	60 83       	st	Z, r22
     ff6:	da 01       	movw	r26, r20
     ff8:	8c 91       	ld	r24, X
     ffa:	82 83       	std	Z+2, r24	; 0x02
{
}
     ffc:	08 95       	ret

00000ffe <_ZN5Usart4initEv>:

void Usart::init()
{
	// wlaczenie transmisji, wlaczenie odbioru, wlaczenie przerwania odbioru
	UCSRB = (1<<TXEN) | (1<<RXEN) | (1<<RXCIE);
     ffe:	88 e9       	ldi	r24, 0x98	; 152
    1000:	8a b9       	out	0x0a, r24	; 10
	//nastaw 8-bitowej ramki
	UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
    1002:	86 e8       	ldi	r24, 0x86	; 134
    1004:	80 bd       	out	0x20, r24	; 32
	// for 9600 baud at 1MHz
	UBRRL = USART_UBRRL;
    1006:	8f e5       	ldi	r24, 0x5F	; 95
    1008:	89 b9       	out	0x09, r24	; 9
	sei();
    100a:	78 94       	sei
}
    100c:	08 95       	ret

0000100e <_ZN5Usart7receiveEv>:
	}
}

const char Usart::receive()
{
	while (!newCharReceived)
    100e:	80 91 84 01 	lds	r24, 0x0184
    1012:	88 23       	and	r24, r24
    1014:	49 f4       	brne	.+18     	; 0x1028 <_ZN5Usart7receiveEv+0x1a>
    1016:	86 e6       	ldi	r24, 0x66	; 102
    1018:	9e e0       	ldi	r25, 0x0E	; 14
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	f1 f7       	brne	.-4      	; 0x101a <_ZN5Usart7receiveEv+0xc>
    101e:	00 00       	nop
    1020:	80 91 84 01 	lds	r24, 0x0184
    1024:	88 23       	and	r24, r24
    1026:	b9 f3       	breq	.-18     	; 0x1016 <_ZN5Usart7receiveEv+0x8>
		_delay_ms(USART_SLEEP_TIME);
	char temp = incomeChar;
    1028:	80 91 85 01 	lds	r24, 0x0185
	newCharReceived = false;
    102c:	10 92 84 01 	sts	0x0184, r1
	return temp;
}
    1030:	08 95       	ret

00001032 <_ZN5Usart4sendEc>:

void Usart::send(char toSend)
{
	while (!(UCSRA & (1<<UDRE)));
    1032:	5d 9b       	sbis	0x0b, 5	; 11
    1034:	fe cf       	rjmp	.-4      	; 0x1032 <_ZN5Usart4sendEc>
	UDR = toSend;
    1036:	8c b9       	out	0x0c, r24	; 12
}
    1038:	08 95       	ret

0000103a <_ZN5Usart3runEv>:
{
	while (true)
	{
		const char scenarioCode = receive();
		const uint8_t &scenarioParams = scenarios[scenarioCode].paramsBytes;
		for (uint8_t i = 0; i < scenarioParams; ++i)
    103a:	0f 2e       	mov	r0, r31
    103c:	fc e8       	ldi	r31, 0x8C	; 140
    103e:	cf 2e       	mov	r12, r31
    1040:	f1 e0       	ldi	r31, 0x01	; 1
    1042:	df 2e       	mov	r13, r31
    1044:	f0 2d       	mov	r31, r0
    1046:	bb 24       	eor	r11, r11

void Usart::run()
{
	while (true)
	{
		const char scenarioCode = receive();
    1048:	0e 94 07 08 	call	0x100e	; 0x100e <_ZN5Usart7receiveEv>
    104c:	d8 2f       	mov	r29, r24
		const uint8_t &scenarioParams = scenarios[scenarioCode].paramsBytes;
    104e:	e8 2e       	mov	r14, r24
    1050:	ff 24       	eor	r15, r15
		for (uint8_t i = 0; i < scenarioParams; ++i)
    1052:	f7 01       	movw	r30, r14
    1054:	ee 0f       	add	r30, r30
    1056:	ff 1f       	adc	r31, r31
    1058:	ee 0d       	add	r30, r14
    105a:	ff 1d       	adc	r31, r15
    105c:	ec 0d       	add	r30, r12
    105e:	fd 1d       	adc	r31, r13
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	88 23       	and	r24, r24
    1064:	81 f0       	breq	.+32     	; 0x1086 <_ZN5Usart3runEv+0x4c>
    1066:	cb 2d       	mov	r28, r11
    1068:	8f 01       	movw	r16, r30
    106a:	0e 5f       	subi	r16, 0xFE	; 254
    106c:	1f 4f       	sbci	r17, 0xFF	; 255
			params[i] = receive();
    106e:	0e 94 07 08 	call	0x100e	; 0x100e <_ZN5Usart7receiveEv>
    1072:	ec 2f       	mov	r30, r28
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	e8 57       	subi	r30, 0x78	; 120
    1078:	fe 4f       	sbci	r31, 0xFE	; 254
    107a:	80 83       	st	Z, r24
{
	while (true)
	{
		const char scenarioCode = receive();
		const uint8_t &scenarioParams = scenarios[scenarioCode].paramsBytes;
		for (uint8_t i = 0; i < scenarioParams; ++i)
    107c:	cf 5f       	subi	r28, 0xFF	; 255
    107e:	f8 01       	movw	r30, r16
    1080:	80 81       	ld	r24, Z
    1082:	c8 17       	cp	r28, r24
    1084:	a0 f3       	brcs	.-24     	; 0x106e <_ZN5Usart3runEv+0x34>
			params[i] = receive();
		send(scenarioCode);
    1086:	8d 2f       	mov	r24, r29
    1088:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
		scenarios[scenarioCode].function();
    108c:	c7 01       	movw	r24, r14
    108e:	88 0f       	add	r24, r24
    1090:	99 1f       	adc	r25, r25
    1092:	e8 0e       	add	r14, r24
    1094:	f9 1e       	adc	r15, r25
    1096:	f6 01       	movw	r30, r12
    1098:	ee 0d       	add	r30, r14
    109a:	ff 1d       	adc	r31, r15
    109c:	01 90       	ld	r0, Z+
    109e:	f0 81       	ld	r31, Z
    10a0:	e0 2d       	mov	r30, r0
    10a2:	09 95       	icall
	sei();
}

void Usart::run()
{
	while (true)
    10a4:	d1 cf       	rjmp	.-94     	; 0x1048 <_ZN5Usart3runEv+0xe>

000010a6 <_ZN5Usart4sendEPKc>:
	while (!(UCSRA & (1<<UDRE)));
	UDR = toSend;
}

void Usart::send(const char *toSend)
{
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	ec 01       	movw	r28, r24
	send(128);
    10ac:	80 e8       	ldi	r24, 0x80	; 128
    10ae:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
	while (*toSend != '\0')
    10b2:	88 81       	ld	r24, Y
    10b4:	88 23       	and	r24, r24
    10b6:	31 f0       	breq	.+12     	; 0x10c4 <_ZN5Usart4sendEPKc+0x1e>
{
	while (!(UCSRA & (1<<UDRE)));
	UDR = toSend;
}

void Usart::send(const char *toSend)
    10b8:	21 96       	adiw	r28, 0x01	; 1
{
	send(128);
	while (*toSend != '\0')
		send(*toSend++);
    10ba:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
}

void Usart::send(const char *toSend)
{
	send(128);
	while (*toSend != '\0')
    10be:	89 91       	ld	r24, Y+
    10c0:	88 23       	and	r24, r24
    10c2:	d9 f7       	brne	.-10     	; 0x10ba <_ZN5Usart4sendEPKc+0x14>
		send(*toSend++);
	send('\0');
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	0e 94 19 08 	call	0x1032	; 0x1032 <_ZN5Usart4sendEc>
}
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	08 95       	ret

000010d0 <_ZN5Usart12pushFunctionERKNS_8ScenarioEh>:

void Usart::pushFunction(const Scenario &scenario, uint8_t id)
{
	scenarios[id] = scenario;
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	db 01       	movw	r26, r22
    10d4:	aa 0f       	add	r26, r26
    10d6:	bb 1f       	adc	r27, r27
    10d8:	a6 0f       	add	r26, r22
    10da:	b7 1f       	adc	r27, r23
    10dc:	a4 57       	subi	r26, 0x74	; 116
    10de:	be 4f       	sbci	r27, 0xFE	; 254
    10e0:	e8 2f       	mov	r30, r24
    10e2:	f9 2f       	mov	r31, r25
    10e4:	83 e0       	ldi	r24, 0x03	; 3
    10e6:	01 90       	ld	r0, Z+
    10e8:	0d 92       	st	X+, r0
    10ea:	81 50       	subi	r24, 0x01	; 1
    10ec:	e1 f7       	brne	.-8      	; 0x10e6 <_ZN5Usart12pushFunctionERKNS_8ScenarioEh+0x16>
}
    10ee:	08 95       	ret

000010f0 <_ZN5Usart6getBitERKh>:

const bool Usart::getBit(const uint8_t &nr)
{
	
	return   ( params[(nr>>3)] & (1 << ((nr) - ((nr)>>3<<3))))   ;
    10f0:	fc 01       	movw	r30, r24
    10f2:	20 81       	ld	r18, Z
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	f9 01       	movw	r30, r18
    10f8:	f5 95       	asr	r31
    10fa:	e7 95       	ror	r30
    10fc:	f5 95       	asr	r31
    10fe:	e7 95       	ror	r30
    1100:	f5 95       	asr	r31
    1102:	e7 95       	ror	r30
    1104:	e8 57       	subi	r30, 0x78	; 120
    1106:	fe 4f       	sbci	r31, 0xFE	; 254
    1108:	80 81       	ld	r24, Z
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	27 70       	andi	r18, 0x07	; 7
    110e:	30 70       	andi	r19, 0x00	; 0
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <_ZN5Usart6getBitERKh+0x26>
    1112:	95 95       	asr	r25
    1114:	87 95       	ror	r24
    1116:	2a 95       	dec	r18
    1118:	e2 f7       	brpl	.-8      	; 0x1112 <_ZN5Usart6getBitERKh+0x22>
}
    111a:	81 70       	andi	r24, 0x01	; 1
    111c:	08 95       	ret

0000111e <_ZN5Usart7getBitsERKhS1_>:



const uint32_t Usart::getBits(const uint8_t &start, const uint8_t &size)
{
    111e:	8f 92       	push	r8
    1120:	9f 92       	push	r9
    1122:	af 92       	push	r10
    1124:	bf 92       	push	r11
    1126:	cf 92       	push	r12
    1128:	df 92       	push	r13
    112a:	ef 92       	push	r14
    112c:	ff 92       	push	r15
    112e:	1f 93       	push	r17
    1130:	cf 93       	push	r28
    1132:	df 93       	push	r29
    1134:	0f 92       	push	r0
    1136:	cd b7       	in	r28, 0x3d	; 61
    1138:	de b7       	in	r29, 0x3e	; 62
    113a:	4c 01       	movw	r8, r24
    113c:	5b 01       	movw	r10, r22
	uint32_t bits = 0x00;
	for (uint8_t i = 0; i < size; ++i)
    113e:	fb 01       	movw	r30, r22
    1140:	80 81       	ld	r24, Z
    1142:	88 23       	and	r24, r24
    1144:	09 f1       	breq	.+66     	; 0x1188 <_ZN5Usart7getBitsERKhS1_+0x6a>
    1146:	10 e0       	ldi	r17, 0x00	; 0



const uint32_t Usart::getBits(const uint8_t &start, const uint8_t &size)
{
	uint32_t bits = 0x00;
    1148:	cc 24       	eor	r12, r12
    114a:	dd 24       	eor	r13, r13
    114c:	76 01       	movw	r14, r12
	for (uint8_t i = 0; i < size; ++i)
		bits += (getBit(start + i) << i);
    114e:	f4 01       	movw	r30, r8
    1150:	80 81       	ld	r24, Z
    1152:	81 0f       	add	r24, r17
    1154:	89 83       	std	Y+1, r24	; 0x01
    1156:	ce 01       	movw	r24, r28
    1158:	01 96       	adiw	r24, 0x01	; 1
    115a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <_ZN5Usart6getBitERKh>
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	01 2e       	mov	r0, r17
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <_ZN5Usart7getBitsERKhS1_+0x4a>
    1164:	88 0f       	add	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	0a 94       	dec	r0
    116a:	e2 f7       	brpl	.-8      	; 0x1164 <_ZN5Usart7getBitsERKhS1_+0x46>
    116c:	aa 27       	eor	r26, r26
    116e:	97 fd       	sbrc	r25, 7
    1170:	a0 95       	com	r26
    1172:	ba 2f       	mov	r27, r26
    1174:	c8 0e       	add	r12, r24
    1176:	d9 1e       	adc	r13, r25
    1178:	ea 1e       	adc	r14, r26
    117a:	fb 1e       	adc	r15, r27


const uint32_t Usart::getBits(const uint8_t &start, const uint8_t &size)
{
	uint32_t bits = 0x00;
	for (uint8_t i = 0; i < size; ++i)
    117c:	1f 5f       	subi	r17, 0xFF	; 255
    117e:	f5 01       	movw	r30, r10
    1180:	80 81       	ld	r24, Z
    1182:	18 17       	cp	r17, r24
    1184:	20 f3       	brcs	.-56     	; 0x114e <_ZN5Usart7getBitsERKhS1_+0x30>
    1186:	03 c0       	rjmp	.+6      	; 0x118e <_ZN5Usart7getBitsERKhS1_+0x70>



const uint32_t Usart::getBits(const uint8_t &start, const uint8_t &size)
{
	uint32_t bits = 0x00;
    1188:	cc 24       	eor	r12, r12
    118a:	dd 24       	eor	r13, r13
    118c:	76 01       	movw	r14, r12
	for (uint8_t i = 0; i < size; ++i)
		bits += (getBit(start + i) << i);
	
	return bits;
    118e:	6c 2d       	mov	r22, r12
    1190:	7d 2d       	mov	r23, r13
    1192:	8e 2d       	mov	r24, r14
    1194:	9f 2d       	mov	r25, r15
    1196:	0f 90       	pop	r0
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	1f 91       	pop	r17
    119e:	ff 90       	pop	r15
    11a0:	ef 90       	pop	r14
    11a2:	df 90       	pop	r13
    11a4:	cf 90       	pop	r12
    11a6:	bf 90       	pop	r11
    11a8:	af 90       	pop	r10
    11aa:	9f 90       	pop	r9
    11ac:	8f 90       	pop	r8
    11ae:	08 95       	ret

000011b0 <__tablejump2__>:
    11b0:	ee 0f       	add	r30, r30
    11b2:	ff 1f       	adc	r31, r31

000011b4 <__tablejump__>:
    11b4:	05 90       	lpm	r0, Z+
    11b6:	f4 91       	lpm	r31, Z
    11b8:	e0 2d       	mov	r30, r0
    11ba:	09 94       	ijmp

000011bc <_exit>:
    11bc:	f8 94       	cli

000011be <__stop_program>:
    11be:	ff cf       	rjmp	.-2      	; 0x11be <__stop_program>
