
kalorymetr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000630  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000630  000006c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000003fe  00800060  00800060  000006c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011b3  00000000  00000000  000007c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067e  00000000  00000000  00001977  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000043b  00000000  00000000  00001ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001dc  00000000  00000000  00002430  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e7  00000000  00000000  0000260c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004ee  00000000  00000000  00002af3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002fe1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	95 c2       	rjmp	.+1322   	; 0x542 <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_start>:
  26:	7c 00       	.word	0x007c	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_clear_bss>:
  34:	24 e0       	ldi	r18, 0x04	; 4
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	01 c0       	rjmp	.+2      	; 0x3e <.do_clear_bss_start>

0000003c <.do_clear_bss_loop>:
  3c:	1d 92       	st	X+, r1

0000003e <.do_clear_bss_start>:
  3e:	ae 35       	cpi	r26, 0x5E	; 94
  40:	b2 07       	cpc	r27, r18
  42:	e1 f7       	brne	.-8      	; 0x3c <.do_clear_bss_loop>

00000044 <__do_global_ctors>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	c8 e2       	ldi	r28, 0x28	; 40
  48:	d0 e0       	ldi	r29, 0x00	; 0
  4a:	03 c0       	rjmp	.+6      	; 0x52 <__do_global_ctors+0xe>
  4c:	22 97       	sbiw	r28, 0x02	; 2
  4e:	fe 01       	movw	r30, r28
  50:	e9 d2       	rcall	.+1490   	; 0x624 <__tablejump__>
  52:	c6 32       	cpi	r28, 0x26	; 38
  54:	d1 07       	cpc	r29, r17
  56:	d1 f7       	brne	.-12     	; 0x4c <__do_global_ctors+0x8>
  58:	42 d0       	rcall	.+132    	; 0xde <main>
  5a:	e8 c2       	rjmp	.+1488   	; 0x62c <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z5statev>:
#include <avr/io.h>
#include "../modules/Usart.h"

const uint8_t state()
{
	Usart::buffer[0] = DDRB;
  5e:	87 b3       	in	r24, 0x17	; 23
  60:	80 93 5c 01 	sts	0x015C, r24
	Usart::buffer[1] = DDRC;
  64:	84 b3       	in	r24, 0x14	; 20
  66:	80 93 5d 01 	sts	0x015D, r24
	Usart::buffer[2] = DDRD;
  6a:	81 b3       	in	r24, 0x11	; 17
  6c:	80 93 5e 01 	sts	0x015E, r24
	Usart::buffer[3] = PORTB;
  70:	88 b3       	in	r24, 0x18	; 24
  72:	80 93 5f 01 	sts	0x015F, r24
	Usart::buffer[4] = PORTC;
  76:	85 b3       	in	r24, 0x15	; 21
  78:	80 93 60 01 	sts	0x0160, r24
	Usart::buffer[5] = PORTD;
  7c:	82 b3       	in	r24, 0x12	; 18
  7e:	80 93 61 01 	sts	0x0161, r24
	Usart::buffer[6] = PINB;
  82:	86 b3       	in	r24, 0x16	; 22
  84:	80 93 62 01 	sts	0x0162, r24
	Usart::buffer[7] = PINC;
  88:	83 b3       	in	r24, 0x13	; 19
  8a:	80 93 63 01 	sts	0x0163, r24
	Usart::buffer[8] = PIND;
  8e:	80 b3       	in	r24, 0x10	; 16
  90:	80 93 64 01 	sts	0x0164, r24
	return 9;
}
  94:	89 e0       	ldi	r24, 0x09	; 9
  96:	08 95       	ret

00000098 <_Z8state_lnv>:
#include <avr/io.h>
#include "../modules/Usart.h"

const uint8_t state_ln()
{
	Usart::buffer[0] = DDRB;
  98:	87 b3       	in	r24, 0x17	; 23
  9a:	80 93 5c 01 	sts	0x015C, r24
	Usart::buffer[1] = DDRC;
  9e:	84 b3       	in	r24, 0x14	; 20
  a0:	80 93 5d 01 	sts	0x015D, r24
	Usart::buffer[2] = DDRD;
  a4:	81 b3       	in	r24, 0x11	; 17
  a6:	80 93 5e 01 	sts	0x015E, r24
	Usart::buffer[3] = PORTB;
  aa:	88 b3       	in	r24, 0x18	; 24
  ac:	80 93 5f 01 	sts	0x015F, r24
	Usart::buffer[4] = PORTC;
  b0:	85 b3       	in	r24, 0x15	; 21
  b2:	80 93 60 01 	sts	0x0160, r24
	Usart::buffer[5] = PORTD;
  b6:	82 b3       	in	r24, 0x12	; 18
  b8:	80 93 61 01 	sts	0x0161, r24
	Usart::buffer[6] = PINB;
  bc:	86 b3       	in	r24, 0x16	; 22
  be:	80 93 62 01 	sts	0x0162, r24
	Usart::buffer[7] = PINC;
  c2:	83 b3       	in	r24, 0x13	; 19
  c4:	80 93 63 01 	sts	0x0163, r24
	Usart::buffer[8] = PIND;
  c8:	80 b3       	in	r24, 0x10	; 16
  ca:	80 93 64 01 	sts	0x0164, r24
	/*Usart::pushText("\r\n", 9);*/
	Usart::buffer[9] = '\r';
  ce:	8d e0       	ldi	r24, 0x0D	; 13
  d0:	80 93 65 01 	sts	0x0165, r24
	Usart::buffer[10] = '\n';
  d4:	8a e0       	ldi	r24, 0x0A	; 10
  d6:	80 93 66 01 	sts	0x0166, r24
	return 11;
}
  da:	8b e0       	ldi	r24, 0x0B	; 11
  dc:	08 95       	ret

000000de <main>:
#include "config/scenario_glue.h"
#include "modules/Usart.h"

int main(void)
{
	Usart::init();
  de:	58 d2       	rcall	.+1200   	; 0x590 <_ZN5Usart4initEv>
Usart::pushFunction(state, 32);
  e0:	60 e2       	ldi	r22, 0x20	; 32
  e2:	8f e2       	ldi	r24, 0x2F	; 47
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	93 d2       	rcall	.+1318   	; 0x60e <_ZN5Usart12pushFunctionEPFKhvEh>
  e8:	61 e2       	ldi	r22, 0x21	; 33
  ea:	8c e4       	ldi	r24, 0x4C	; 76
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	8f d2       	rcall	.+1310   	; 0x60e <_ZN5Usart12pushFunctionEPFKhvEh>
	#include "config/scenario_register.h"
	Usart::run();
  f0:	5b d2       	rcall	.+1206   	; 0x5a8 <_ZN5Usart3runEv>
	return 0;
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	08 95       	ret

000000f8 <_GLOBAL__sub_I__ZN3Pin9instancesE>:
// hidden

Pin::Pin(const Pin::Addr &n_addr, const int &n_addrMask, const bool &n_isAllowed)
: addr(n_addr), addrMask(n_addrMask), isAllowed(n_isAllowed)
{
  f8:	2f 92       	push	r2
  fa:	3f 92       	push	r3
  fc:	5f 92       	push	r5
  fe:	6f 92       	push	r6
 100:	7f 92       	push	r7
 102:	8f 92       	push	r8
 104:	9f 92       	push	r9
 106:	af 92       	push	r10
 108:	bf 92       	push	r11
 10a:	cf 92       	push	r12
 10c:	df 92       	push	r13
 10e:	ef 92       	push	r14
 110:	ff 92       	push	r15
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
}

// hidden

Pin::Pin(const Pin::Addr &n_addr, const int &n_addrMask, const bool &n_isAllowed)
: addr(n_addr), addrMask(n_addrMask), isAllowed(n_isAllowed)
 11a:	e0 e6       	ldi	r30, 0x60	; 96
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	84 e3       	ldi	r24, 0x34	; 52
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	91 83       	std	Z+1, r25	; 0x01
 124:	80 83       	st	Z, r24
 126:	23 e3       	ldi	r18, 0x33	; 51
 128:	c2 2e       	mov	r12, r18
 12a:	d1 2c       	mov	r13, r1
 12c:	d3 82       	std	Z+3, r13	; 0x03
 12e:	c2 82       	std	Z+2, r12	; 0x02
 130:	35 e3       	ldi	r19, 0x35	; 53
 132:	e3 2e       	mov	r14, r19
 134:	f1 2c       	mov	r15, r1
 136:	f5 82       	std	Z+5, r15	; 0x05
 138:	e4 82       	std	Z+4, r14	; 0x04
 13a:	26 e0       	ldi	r18, 0x06	; 6
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	30 93 67 00 	sts	0x0067, r19
 142:	20 93 66 00 	sts	0x0066, r18
 146:	10 92 68 00 	sts	0x0068, r1
 14a:	01 e3       	ldi	r16, 0x31	; 49
 14c:	10 e0       	ldi	r17, 0x00	; 0
 14e:	12 87       	std	Z+10, r17	; 0x0a
 150:	01 87       	std	Z+9, r16	; 0x09
 152:	c0 e3       	ldi	r28, 0x30	; 48
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	d4 87       	std	Z+12, r29	; 0x0c
 158:	c3 87       	std	Z+11, r28	; 0x0b
 15a:	a2 e3       	ldi	r26, 0x32	; 50
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	b6 87       	std	Z+14, r27	; 0x0e
 160:	a5 87       	std	Z+13, r26	; 0x0d
 162:	10 92 70 00 	sts	0x0070, r1
 166:	10 92 6f 00 	sts	0x006F, r1
 16a:	10 92 71 00 	sts	0x0071, r1
 16e:	13 8b       	std	Z+19, r17	; 0x13
 170:	02 8b       	std	Z+18, r16	; 0x12
 172:	d5 8b       	std	Z+21, r29	; 0x15
 174:	c4 8b       	std	Z+20, r28	; 0x14
 176:	b7 8b       	std	Z+23, r27	; 0x17
 178:	a6 8b       	std	Z+22, r26	; 0x16
 17a:	88 24       	eor	r8, r8
 17c:	83 94       	inc	r8
 17e:	91 2c       	mov	r9, r1
 180:	90 92 79 00 	sts	0x0079, r9
 184:	80 92 78 00 	sts	0x0078, r8
 188:	10 92 7a 00 	sts	0x007A, r1
 18c:	14 8f       	std	Z+28, r17	; 0x1c
 18e:	03 8f       	std	Z+27, r16	; 0x1b
 190:	d6 8f       	std	Z+30, r29	; 0x1e
 192:	c5 8f       	std	Z+29, r28	; 0x1d
 194:	b0 a3       	std	Z+32, r27	; 0x20
 196:	a7 8f       	std	Z+31, r26	; 0x1f
 198:	52 e0       	ldi	r21, 0x02	; 2
 19a:	65 2e       	mov	r6, r21
 19c:	71 2c       	mov	r7, r1
 19e:	70 92 82 00 	sts	0x0082, r7
 1a2:	60 92 81 00 	sts	0x0081, r6
 1a6:	55 24       	eor	r5, r5
 1a8:	53 94       	inc	r5
 1aa:	50 92 83 00 	sts	0x0083, r5
 1ae:	15 a3       	std	Z+37, r17	; 0x25
 1b0:	04 a3       	std	Z+36, r16	; 0x24
 1b2:	d7 a3       	std	Z+39, r29	; 0x27
 1b4:	c6 a3       	std	Z+38, r28	; 0x26
 1b6:	b1 a7       	std	Z+41, r27	; 0x29
 1b8:	a0 a7       	std	Z+40, r26	; 0x28
 1ba:	63 e0       	ldi	r22, 0x03	; 3
 1bc:	26 2e       	mov	r2, r22
 1be:	31 2c       	mov	r3, r1
 1c0:	30 92 8b 00 	sts	0x008B, r3
 1c4:	20 92 8a 00 	sts	0x008A, r2
 1c8:	50 92 8c 00 	sts	0x008C, r5
 1cc:	16 a7       	std	Z+46, r17	; 0x2e
 1ce:	05 a7       	std	Z+45, r16	; 0x2d
 1d0:	d0 ab       	std	Z+48, r29	; 0x30
 1d2:	c7 a7       	std	Z+47, r28	; 0x2f
 1d4:	b2 ab       	std	Z+50, r27	; 0x32
 1d6:	a1 ab       	std	Z+49, r26	; 0x31
 1d8:	74 e0       	ldi	r23, 0x04	; 4
 1da:	a7 2e       	mov	r10, r23
 1dc:	b1 2c       	mov	r11, r1
 1de:	b0 92 94 00 	sts	0x0094, r11
 1e2:	a0 92 93 00 	sts	0x0093, r10
 1e6:	50 92 95 00 	sts	0x0095, r5
 1ea:	97 ab       	std	Z+55, r25	; 0x37
 1ec:	86 ab       	std	Z+54, r24	; 0x36
 1ee:	91 af       	std	Z+57, r25	; 0x39
 1f0:	80 af       	std	Z+56, r24	; 0x38
 1f2:	93 af       	std	Z+59, r25	; 0x3b
 1f4:	82 af       	std	Z+58, r24	; 0x3a
 1f6:	30 93 9d 00 	sts	0x009D, r19
 1fa:	20 93 9c 00 	sts	0x009C, r18
 1fe:	50 92 9e 00 	sts	0x009E, r5
 202:	90 93 a0 00 	sts	0x00A0, r25
 206:	80 93 9f 00 	sts	0x009F, r24
 20a:	90 93 a2 00 	sts	0x00A2, r25
 20e:	80 93 a1 00 	sts	0x00A1, r24
 212:	90 93 a4 00 	sts	0x00A4, r25
 216:	80 93 a3 00 	sts	0x00A3, r24
 21a:	30 93 a6 00 	sts	0x00A6, r19
 21e:	20 93 a5 00 	sts	0x00A5, r18
 222:	50 92 a7 00 	sts	0x00A7, r5
 226:	e7 e3       	ldi	r30, 0x37	; 55
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	f0 93 a9 00 	sts	0x00A9, r31
 22e:	e0 93 a8 00 	sts	0x00A8, r30
 232:	66 e3       	ldi	r22, 0x36	; 54
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	70 93 ab 00 	sts	0x00AB, r23
 23a:	60 93 aa 00 	sts	0x00AA, r22
 23e:	48 e3       	ldi	r20, 0x38	; 56
 240:	50 e0       	ldi	r21, 0x00	; 0
 242:	50 93 ad 00 	sts	0x00AD, r21
 246:	40 93 ac 00 	sts	0x00AC, r20
 24a:	30 93 af 00 	sts	0x00AF, r19
 24e:	20 93 ae 00 	sts	0x00AE, r18
 252:	50 92 b0 00 	sts	0x00B0, r5
 256:	f0 93 b2 00 	sts	0x00B2, r31
 25a:	e0 93 b1 00 	sts	0x00B1, r30
 25e:	70 93 b4 00 	sts	0x00B4, r23
 262:	60 93 b3 00 	sts	0x00B3, r22
 266:	50 93 b6 00 	sts	0x00B6, r21
 26a:	40 93 b5 00 	sts	0x00B5, r20
 26e:	0f 2e       	mov	r0, r31
 270:	f7 e0       	ldi	r31, 0x07	; 7
 272:	af 2e       	mov	r10, r31
 274:	b1 2c       	mov	r11, r1
 276:	f0 2d       	mov	r31, r0
 278:	b0 92 b8 00 	sts	0x00B8, r11
 27c:	a0 92 b7 00 	sts	0x00B7, r10
 280:	50 92 b9 00 	sts	0x00B9, r5
 284:	10 93 bb 00 	sts	0x00BB, r17
 288:	00 93 ba 00 	sts	0x00BA, r16
 28c:	d0 93 bd 00 	sts	0x00BD, r29
 290:	c0 93 bc 00 	sts	0x00BC, r28
 294:	b0 93 bf 00 	sts	0x00BF, r27
 298:	a0 93 be 00 	sts	0x00BE, r26
 29c:	0f 2e       	mov	r0, r31
 29e:	f5 e0       	ldi	r31, 0x05	; 5
 2a0:	af 2e       	mov	r10, r31
 2a2:	b1 2c       	mov	r11, r1
 2a4:	f0 2d       	mov	r31, r0
 2a6:	b0 92 c1 00 	sts	0x00C1, r11
 2aa:	a0 92 c0 00 	sts	0x00C0, r10
 2ae:	50 92 c2 00 	sts	0x00C2, r5
 2b2:	10 93 c4 00 	sts	0x00C4, r17
 2b6:	00 93 c3 00 	sts	0x00C3, r16
 2ba:	d0 93 c6 00 	sts	0x00C6, r29
 2be:	c0 93 c5 00 	sts	0x00C5, r28
 2c2:	b0 93 c8 00 	sts	0x00C8, r27
 2c6:	a0 93 c7 00 	sts	0x00C7, r26
 2ca:	30 93 ca 00 	sts	0x00CA, r19
 2ce:	20 93 c9 00 	sts	0x00C9, r18
 2d2:	50 92 cb 00 	sts	0x00CB, r5
 2d6:	10 93 cd 00 	sts	0x00CD, r17
 2da:	00 93 cc 00 	sts	0x00CC, r16
 2de:	d0 93 cf 00 	sts	0x00CF, r29
 2e2:	c0 93 ce 00 	sts	0x00CE, r28
 2e6:	b0 93 d1 00 	sts	0x00D1, r27
 2ea:	a0 93 d0 00 	sts	0x00D0, r26
 2ee:	a7 e0       	ldi	r26, 0x07	; 7
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	b0 93 d3 00 	sts	0x00D3, r27
 2f6:	a0 93 d2 00 	sts	0x00D2, r26
 2fa:	50 92 d4 00 	sts	0x00D4, r5
 2fe:	f0 93 d6 00 	sts	0x00D6, r31
 302:	e0 93 d5 00 	sts	0x00D5, r30
 306:	70 93 d8 00 	sts	0x00D8, r23
 30a:	60 93 d7 00 	sts	0x00D7, r22
 30e:	50 93 da 00 	sts	0x00DA, r21
 312:	40 93 d9 00 	sts	0x00D9, r20
 316:	10 92 dc 00 	sts	0x00DC, r1
 31a:	10 92 db 00 	sts	0x00DB, r1
 31e:	50 92 dd 00 	sts	0x00DD, r5
 322:	f0 93 df 00 	sts	0x00DF, r31
 326:	e0 93 de 00 	sts	0x00DE, r30
 32a:	70 93 e1 00 	sts	0x00E1, r23
 32e:	60 93 e0 00 	sts	0x00E0, r22
 332:	50 93 e3 00 	sts	0x00E3, r21
 336:	40 93 e2 00 	sts	0x00E2, r20
 33a:	90 92 e5 00 	sts	0x00E5, r9
 33e:	80 92 e4 00 	sts	0x00E4, r8
 342:	50 92 e6 00 	sts	0x00E6, r5
 346:	f0 93 e8 00 	sts	0x00E8, r31
 34a:	e0 93 e7 00 	sts	0x00E7, r30
 34e:	70 93 ea 00 	sts	0x00EA, r23
 352:	60 93 e9 00 	sts	0x00E9, r22
 356:	50 93 ec 00 	sts	0x00EC, r21
 35a:	40 93 eb 00 	sts	0x00EB, r20
 35e:	70 92 ee 00 	sts	0x00EE, r7
 362:	60 92 ed 00 	sts	0x00ED, r6
 366:	50 92 ef 00 	sts	0x00EF, r5
 36a:	f0 93 f1 00 	sts	0x00F1, r31
 36e:	e0 93 f0 00 	sts	0x00F0, r30
 372:	70 93 f3 00 	sts	0x00F3, r23
 376:	60 93 f2 00 	sts	0x00F2, r22
 37a:	50 93 f5 00 	sts	0x00F5, r21
 37e:	40 93 f4 00 	sts	0x00F4, r20
 382:	30 92 f7 00 	sts	0x00F7, r3
 386:	20 92 f6 00 	sts	0x00F6, r2
 38a:	10 92 f8 00 	sts	0x00F8, r1
 38e:	f0 93 fa 00 	sts	0x00FA, r31
 392:	e0 93 f9 00 	sts	0x00F9, r30
 396:	70 93 fc 00 	sts	0x00FC, r23
 39a:	60 93 fb 00 	sts	0x00FB, r22
 39e:	50 93 fe 00 	sts	0x00FE, r21
 3a2:	40 93 fd 00 	sts	0x00FD, r20
 3a6:	a4 e0       	ldi	r26, 0x04	; 4
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	b0 93 00 01 	sts	0x0100, r27
 3ae:	a0 93 ff 00 	sts	0x00FF, r26
 3b2:	10 92 01 01 	sts	0x0101, r1
 3b6:	f0 93 03 01 	sts	0x0103, r31
 3ba:	e0 93 02 01 	sts	0x0102, r30
 3be:	70 93 05 01 	sts	0x0105, r23
 3c2:	60 93 04 01 	sts	0x0104, r22
 3c6:	50 93 07 01 	sts	0x0107, r21
 3ca:	40 93 06 01 	sts	0x0106, r20
 3ce:	b0 92 09 01 	sts	0x0109, r11
 3d2:	a0 92 08 01 	sts	0x0108, r10
 3d6:	10 92 0a 01 	sts	0x010A, r1
 3da:	90 93 0c 01 	sts	0x010C, r25
 3de:	80 93 0b 01 	sts	0x010B, r24
 3e2:	90 93 0e 01 	sts	0x010E, r25
 3e6:	80 93 0d 01 	sts	0x010D, r24
 3ea:	90 93 10 01 	sts	0x0110, r25
 3ee:	80 93 0f 01 	sts	0x010F, r24
 3f2:	30 93 12 01 	sts	0x0112, r19
 3f6:	20 93 11 01 	sts	0x0111, r18
 3fa:	50 92 13 01 	sts	0x0113, r5
 3fe:	90 93 15 01 	sts	0x0115, r25
 402:	80 93 14 01 	sts	0x0114, r24
 406:	90 93 17 01 	sts	0x0117, r25
 40a:	80 93 16 01 	sts	0x0116, r24
 40e:	90 93 19 01 	sts	0x0119, r25
 412:	80 93 18 01 	sts	0x0118, r24
 416:	30 93 1b 01 	sts	0x011B, r19
 41a:	20 93 1a 01 	sts	0x011A, r18
 41e:	50 92 1c 01 	sts	0x011C, r5
 422:	90 93 1e 01 	sts	0x011E, r25
 426:	80 93 1d 01 	sts	0x011D, r24
 42a:	90 93 20 01 	sts	0x0120, r25
 42e:	80 93 1f 01 	sts	0x011F, r24
 432:	90 93 22 01 	sts	0x0122, r25
 436:	80 93 21 01 	sts	0x0121, r24
 43a:	30 93 24 01 	sts	0x0124, r19
 43e:	20 93 23 01 	sts	0x0123, r18
 442:	50 92 25 01 	sts	0x0125, r5
 446:	90 93 27 01 	sts	0x0127, r25
 44a:	80 93 26 01 	sts	0x0126, r24
 44e:	d0 92 29 01 	sts	0x0129, r13
 452:	c0 92 28 01 	sts	0x0128, r12
 456:	f0 92 2b 01 	sts	0x012B, r15
 45a:	e0 92 2a 01 	sts	0x012A, r14
 45e:	10 92 2d 01 	sts	0x012D, r1
 462:	10 92 2c 01 	sts	0x012C, r1
 466:	50 92 2e 01 	sts	0x012E, r5
 46a:	90 93 30 01 	sts	0x0130, r25
 46e:	80 93 2f 01 	sts	0x012F, r24
 472:	d0 92 32 01 	sts	0x0132, r13
 476:	c0 92 31 01 	sts	0x0131, r12
 47a:	f0 92 34 01 	sts	0x0134, r15
 47e:	e0 92 33 01 	sts	0x0133, r14
 482:	90 92 36 01 	sts	0x0136, r9
 486:	80 92 35 01 	sts	0x0135, r8
 48a:	50 92 37 01 	sts	0x0137, r5
 48e:	90 93 39 01 	sts	0x0139, r25
 492:	80 93 38 01 	sts	0x0138, r24
 496:	d0 92 3b 01 	sts	0x013B, r13
 49a:	c0 92 3a 01 	sts	0x013A, r12
 49e:	f0 92 3d 01 	sts	0x013D, r15
 4a2:	e0 92 3c 01 	sts	0x013C, r14
 4a6:	70 92 3f 01 	sts	0x013F, r7
 4aa:	60 92 3e 01 	sts	0x013E, r6
 4ae:	50 92 40 01 	sts	0x0140, r5
 4b2:	90 93 42 01 	sts	0x0142, r25
 4b6:	80 93 41 01 	sts	0x0141, r24
 4ba:	d0 92 44 01 	sts	0x0144, r13
 4be:	c0 92 43 01 	sts	0x0143, r12
 4c2:	f0 92 46 01 	sts	0x0146, r15
 4c6:	e0 92 45 01 	sts	0x0145, r14
 4ca:	30 92 48 01 	sts	0x0148, r3
 4ce:	20 92 47 01 	sts	0x0147, r2
 4d2:	50 92 49 01 	sts	0x0149, r5
 4d6:	90 93 4b 01 	sts	0x014B, r25
 4da:	80 93 4a 01 	sts	0x014A, r24
 4de:	d0 92 4d 01 	sts	0x014D, r13
 4e2:	c0 92 4c 01 	sts	0x014C, r12
 4e6:	f0 92 4f 01 	sts	0x014F, r15
 4ea:	e0 92 4e 01 	sts	0x014E, r14
 4ee:	b0 93 51 01 	sts	0x0151, r27
 4f2:	a0 93 50 01 	sts	0x0150, r26
 4f6:	50 92 52 01 	sts	0x0152, r5
 4fa:	90 93 54 01 	sts	0x0154, r25
 4fe:	80 93 53 01 	sts	0x0153, r24
 502:	d0 92 56 01 	sts	0x0156, r13
 506:	c0 92 55 01 	sts	0x0155, r12
 50a:	f0 92 58 01 	sts	0x0158, r15
 50e:	e0 92 57 01 	sts	0x0157, r14
 512:	b0 92 5a 01 	sts	0x015A, r11
 516:	a0 92 59 01 	sts	0x0159, r10
 51a:	50 92 5b 01 	sts	0x015B, r5
{
 51e:	df 91       	pop	r29
 520:	cf 91       	pop	r28
 522:	1f 91       	pop	r17
 524:	0f 91       	pop	r16
 526:	ff 90       	pop	r15
 528:	ef 90       	pop	r14
 52a:	df 90       	pop	r13
 52c:	cf 90       	pop	r12
 52e:	bf 90       	pop	r11
 530:	af 90       	pop	r10
 532:	9f 90       	pop	r9
 534:	8f 90       	pop	r8
 536:	7f 90       	pop	r7
 538:	6f 90       	pop	r6
 53a:	5f 90       	pop	r5
 53c:	3f 90       	pop	r3
 53e:	2f 90       	pop	r2
 540:	08 95       	ret

00000542 <__vector_11>:
// tworzenie instancji struktury CharBuffer
CharBuffer charBuffer;

// definicja wektora przerwan odbioru danych USART
ISR(USART_RXC_vect)
{
 542:	1f 92       	push	r1
 544:	0f 92       	push	r0
 546:	0f b6       	in	r0, 0x3f	; 63
 548:	0f 92       	push	r0
 54a:	11 24       	eor	r1, r1
 54c:	8f 93       	push	r24
 54e:	af 93       	push	r26
 550:	bf 93       	push	r27
 552:	cf 93       	push	r28
 554:	df 93       	push	r29
 556:	ef 93       	push	r30
 558:	ff 93       	push	r31
	charBuffer.buffer[charBuffer.iterator] = UDR;
 55a:	cd e5       	ldi	r28, 0x5D	; 93
 55c:	d4 e0       	ldi	r29, 0x04	; 4
 55e:	e8 81       	ld	r30, Y
 560:	8c b1       	in	r24, 0x0c	; 12
 562:	ae 2f       	mov	r26, r30
 564:	b0 e0       	ldi	r27, 0x00	; 0
 566:	a3 5a       	subi	r26, 0xA3	; 163
 568:	bc 4f       	sbci	r27, 0xFC	; 252
 56a:	8c 93       	st	X, r24
	++charBuffer.iterator;
 56c:	ef 5f       	subi	r30, 0xFF	; 255
 56e:	e8 83       	st	Y, r30
	charBuffer.buffer[charBuffer.iterator] = '\0';
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	e3 5a       	subi	r30, 0xA3	; 163
 574:	fc 4f       	sbci	r31, 0xFC	; 252
 576:	10 82       	st	Z, r1
}
 578:	ff 91       	pop	r31
 57a:	ef 91       	pop	r30
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	bf 91       	pop	r27
 582:	af 91       	pop	r26
 584:	8f 91       	pop	r24
 586:	0f 90       	pop	r0
 588:	0f be       	out	0x3f, r0	; 63
 58a:	0f 90       	pop	r0
 58c:	1f 90       	pop	r1
 58e:	18 95       	reti

00000590 <_ZN5Usart4initEv>:
const uint8_t (*Usart::functions[224])();
char Usart::buffer[CHAR_BUFFER_COMMAND_SIZE];

void Usart::init()
{
	UCSRB = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE)); // wlaczenie transmisji, wlaczenie odbioru, wlaczenie przerwania odbioru
 590:	88 e9       	ldi	r24, 0x98	; 152
 592:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0); //nastaw 8-bitowej ramki
 594:	86 e8       	ldi	r24, 0x86	; 134
 596:	80 bd       	out	0x20, r24	; 32
	UBRRL = 71; // for 9600 baud at 1MHz
 598:	87 e4       	ldi	r24, 0x47	; 71
 59a:	89 b9       	out	0x09, r24	; 9
	sei();
 59c:	78 94       	sei
 59e:	08 95       	ret

000005a0 <_ZN5Usart4sendEc>:
	}
}

void Usart::send(char toSend)
{
	while (!(UCSRA & (1<<UDRE)));
 5a0:	5d 9b       	sbis	0x0b, 5	; 11
 5a2:	fe cf       	rjmp	.-4      	; 0x5a0 <_ZN5Usart4sendEc>
	UDR = toSend;
 5a4:	8c b9       	out	0x0c, r24	; 12
 5a6:	08 95       	ret

000005a8 <_ZN5Usart3runEv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5a8:	81 e5       	ldi	r24, 0x51	; 81
 5aa:	9b e0       	ldi	r25, 0x0B	; 11
 5ac:	01 97       	sbiw	r24, 0x01	; 1
 5ae:	f1 f7       	brne	.-4      	; 0x5ac <_ZN5Usart3runEv+0x4>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <_ZN5Usart3runEv+0xa>
 5b2:	00 00       	nop
void Usart::run()
{
	while (true)
	{
		_delay_ms(USART_SLEEP_TIME);
		char charRecv = charBuffer.buffer[readIter];
 5b4:	e0 91 5c 03 	lds	r30, 0x035C
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	e3 5a       	subi	r30, 0xA3	; 163
 5bc:	fc 4f       	sbci	r31, 0xFC	; 252
 5be:	10 81       	ld	r17, Z
		if (charRecv != '\0')
 5c0:	11 23       	and	r17, r17
 5c2:	91 f3       	breq	.-28     	; 0x5a8 <_ZN5Usart3runEv>
		{
			if (charRecv >= static_cast<int>(32) && functions[charRecv - 32])
 5c4:	10 32       	cpi	r17, 0x20	; 32
 5c6:	e8 f0       	brcs	.+58     	; 0x602 <_ZN5Usart3runEv+0x5a>
 5c8:	e1 2f       	mov	r30, r17
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	e4 5a       	subi	r30, 0xA4	; 164
 5d2:	fe 4f       	sbci	r31, 0xFE	; 254
 5d4:	01 90       	ld	r0, Z+
 5d6:	f0 81       	ld	r31, Z
 5d8:	e0 2d       	mov	r30, r0
 5da:	30 97       	sbiw	r30, 0x00	; 0
 5dc:	91 f0       	breq	.+36     	; 0x602 <_ZN5Usart3runEv+0x5a>
			{
				int bufferSize = functions[charRecv - 32]();
 5de:	09 95       	icall
 5e0:	c8 2f       	mov	r28, r24
 5e2:	d0 e0       	ldi	r29, 0x00	; 0
				send(charRecv);
 5e4:	81 2f       	mov	r24, r17
 5e6:	dc df       	rcall	.-72     	; 0x5a0 <_ZN5Usart4sendEc>
				for (uint8_t i = 0; i < bufferSize; ++i)
 5e8:	10 e0       	ldi	r17, 0x00	; 0
 5ea:	21 2f       	mov	r18, r17
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	2c 17       	cp	r18, r28
 5f0:	3d 07       	cpc	r19, r29
 5f2:	3c f4       	brge	.+14     	; 0x602 <_ZN5Usart3runEv+0x5a>
					send(buffer[i]);
 5f4:	f9 01       	movw	r30, r18
 5f6:	e4 5a       	subi	r30, 0xA4	; 164
 5f8:	fe 4f       	sbci	r31, 0xFE	; 254
 5fa:	80 81       	ld	r24, Z
 5fc:	d1 df       	rcall	.-94     	; 0x5a0 <_ZN5Usart4sendEc>
		{
			if (charRecv >= static_cast<int>(32) && functions[charRecv - 32])
			{
				int bufferSize = functions[charRecv - 32]();
				send(charRecv);
				for (uint8_t i = 0; i < bufferSize; ++i)
 5fe:	1f 5f       	subi	r17, 0xFF	; 255
 600:	f4 cf       	rjmp	.-24     	; 0x5ea <_ZN5Usart3runEv+0x42>
					send(buffer[i]);
			}
			++readIter;
 602:	80 91 5c 03 	lds	r24, 0x035C
 606:	8f 5f       	subi	r24, 0xFF	; 255
 608:	80 93 5c 03 	sts	0x035C, r24
 60c:	cd cf       	rjmp	.-102    	; 0x5a8 <_ZN5Usart3runEv>

0000060e <_ZN5Usart12pushFunctionEPFKhvEh>:
	UDR = toSend;
}

void Usart::pushFunction(const uint8_t (*fun)(), uint8_t id)
{
	functions[id - 32] = fun;
 60e:	e6 2f       	mov	r30, r22
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	ee 0f       	add	r30, r30
 614:	ff 1f       	adc	r31, r31
 616:	e4 5a       	subi	r30, 0xA4	; 164
 618:	fe 4f       	sbci	r31, 0xFE	; 254
 61a:	91 83       	std	Z+1, r25	; 0x01
 61c:	80 83       	st	Z, r24
 61e:	08 95       	ret

00000620 <__tablejump2__>:
 620:	ee 0f       	add	r30, r30
 622:	ff 1f       	adc	r31, r31

00000624 <__tablejump__>:
 624:	05 90       	lpm	r0, Z+
 626:	f4 91       	lpm	r31, Z
 628:	e0 2d       	mov	r30, r0
 62a:	09 94       	ijmp

0000062c <_exit>:
 62c:	f8 94       	cli

0000062e <__stop_program>:
 62e:	ff cf       	rjmp	.-2      	; 0x62e <__stop_program>
